// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: task_desc.proto

package firmament;

public final class TaskDesc {
  private TaskDesc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TaskDescriptorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:firmament.TaskDescriptor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 uid = 1;</code>
     */
    long getUid();

    /**
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional .firmament.TaskDescriptor.TaskState state = 3;</code>
     */
    int getStateValue();
    /**
     * <code>optional .firmament.TaskDescriptor.TaskState state = 3;</code>
     */
    firmament.TaskDesc.TaskDescriptor.TaskState getState();

    /**
     * <code>optional string job_id = 4;</code>
     */
    java.lang.String getJobId();
    /**
     * <code>optional string job_id = 4;</code>
     */
    com.google.protobuf.ByteString
        getJobIdBytes();

    /**
     * <code>optional uint64 index = 5;</code>
     */
    long getIndex();

    /**
     * <pre>
     * Inputs/outputs 
     * </pre>
     *
     * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
     */
    java.util.List<firmament.ReferenceDesc.ReferenceDescriptor> 
        getDependenciesList();
    /**
     * <pre>
     * Inputs/outputs 
     * </pre>
     *
     * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
     */
    firmament.ReferenceDesc.ReferenceDescriptor getDependencies(int index);
    /**
     * <pre>
     * Inputs/outputs 
     * </pre>
     *
     * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
     */
    int getDependenciesCount();
    /**
     * <pre>
     * Inputs/outputs 
     * </pre>
     *
     * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
     */
    java.util.List<? extends firmament.ReferenceDesc.ReferenceDescriptorOrBuilder> 
        getDependenciesOrBuilderList();
    /**
     * <pre>
     * Inputs/outputs 
     * </pre>
     *
     * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
     */
    firmament.ReferenceDesc.ReferenceDescriptorOrBuilder getDependenciesOrBuilder(
        int index);

    /**
     * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
     */
    java.util.List<firmament.ReferenceDesc.ReferenceDescriptor> 
        getOutputsList();
    /**
     * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
     */
    firmament.ReferenceDesc.ReferenceDescriptor getOutputs(int index);
    /**
     * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
     */
    int getOutputsCount();
    /**
     * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
     */
    java.util.List<? extends firmament.ReferenceDesc.ReferenceDescriptorOrBuilder> 
        getOutputsOrBuilderList();
    /**
     * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
     */
    firmament.ReferenceDesc.ReferenceDescriptorOrBuilder getOutputsOrBuilder(
        int index);

    /**
     * <pre>
     * Command and arguments 
     * </pre>
     *
     * <code>optional string binary = 8;</code>
     */
    java.lang.String getBinary();
    /**
     * <pre>
     * Command and arguments 
     * </pre>
     *
     * <code>optional string binary = 8;</code>
     */
    com.google.protobuf.ByteString
        getBinaryBytes();

    /**
     * <code>repeated string args = 9;</code>
     */
    java.util.List<java.lang.String>
        getArgsList();
    /**
     * <code>repeated string args = 9;</code>
     */
    int getArgsCount();
    /**
     * <code>repeated string args = 9;</code>
     */
    java.lang.String getArgs(int index);
    /**
     * <code>repeated string args = 9;</code>
     */
    com.google.protobuf.ByteString
        getArgsBytes(int index);

    /**
     * <pre>
     * Children 
     * </pre>
     *
     * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
     */
    java.util.List<firmament.TaskDesc.TaskDescriptor> 
        getSpawnedList();
    /**
     * <pre>
     * Children 
     * </pre>
     *
     * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
     */
    firmament.TaskDesc.TaskDescriptor getSpawned(int index);
    /**
     * <pre>
     * Children 
     * </pre>
     *
     * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
     */
    int getSpawnedCount();
    /**
     * <pre>
     * Children 
     * </pre>
     *
     * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
     */
    java.util.List<? extends firmament.TaskDesc.TaskDescriptorOrBuilder> 
        getSpawnedOrBuilderList();
    /**
     * <pre>
     * Children 
     * </pre>
     *
     * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
     */
    firmament.TaskDesc.TaskDescriptorOrBuilder getSpawnedOrBuilder(
        int index);

    /**
     * <pre>
     * Runtime meta-data 
     * </pre>
     *
     * <code>optional string scheduled_to_resource = 11;</code>
     */
    java.lang.String getScheduledToResource();
    /**
     * <pre>
     * Runtime meta-data 
     * </pre>
     *
     * <code>optional string scheduled_to_resource = 11;</code>
     */
    com.google.protobuf.ByteString
        getScheduledToResourceBytes();

    /**
     * <code>optional string last_heartbeat_location = 12;</code>
     */
    java.lang.String getLastHeartbeatLocation();
    /**
     * <code>optional string last_heartbeat_location = 12;</code>
     */
    com.google.protobuf.ByteString
        getLastHeartbeatLocationBytes();

    /**
     * <code>optional uint64 last_heartbeat_time = 13;</code>
     */
    long getLastHeartbeatTime();

    /**
     * <pre>
     * Delegation info 
     * </pre>
     *
     * <code>optional string delegated_to = 14;</code>
     */
    java.lang.String getDelegatedTo();
    /**
     * <pre>
     * Delegation info 
     * </pre>
     *
     * <code>optional string delegated_to = 14;</code>
     */
    com.google.protobuf.ByteString
        getDelegatedToBytes();

    /**
     * <code>optional string delegated_from = 15;</code>
     */
    java.lang.String getDelegatedFrom();
    /**
     * <code>optional string delegated_from = 15;</code>
     */
    com.google.protobuf.ByteString
        getDelegatedFromBytes();

    /**
     * <pre>
     * Timestamps 
     * </pre>
     *
     * <code>optional uint64 submit_time = 16;</code>
     */
    long getSubmitTime();

    /**
     * <code>optional uint64 start_time = 17;</code>
     */
    long getStartTime();

    /**
     * <code>optional uint64 finish_time = 18;</code>
     */
    long getFinishTime();

    /**
     * <pre>
     * The total time spent unscheduled before previous runs. 
     * </pre>
     *
     * <code>optional uint64 total_unscheduled_time = 19;</code>
     */
    long getTotalUnscheduledTime();

    /**
     * <pre>
     * The total time spent in previous runs. This field only gets updated when
     *the task finishes running. 
     * </pre>
     *
     * <code>optional uint64 total_run_time = 20;</code>
     */
    long getTotalRunTime();

    /**
     * <pre>
     * Deadlines 
     * </pre>
     *
     * <code>optional uint64 relative_deadline = 21;</code>
     */
    long getRelativeDeadline();

    /**
     * <pre>
     * Application-specific fields 
     * </pre>
     *
     * <code>optional uint64 absolute_deadline = 22;</code>
     */
    long getAbsoluteDeadline();

    /**
     * <pre>
     * TODO(malte): move these to sub-messages 
     * </pre>
     *
     * <code>optional uint64 port = 23;</code>
     */
    long getPort();

    /**
     * <code>optional uint64 input_size = 24;</code>
     */
    long getInputSize();

    /**
     * <pre>
     * TaskLib related stuff 
     * </pre>
     *
     * <code>optional bool inject_task_lib = 25;</code>
     */
    boolean getInjectTaskLib();

    /**
     * <pre>
     * Task resource request and priority 
     * </pre>
     *
     * <code>optional .firmament.ResourceVector resource_request = 26;</code>
     */
    boolean hasResourceRequest();
    /**
     * <pre>
     * Task resource request and priority 
     * </pre>
     *
     * <code>optional .firmament.ResourceVector resource_request = 26;</code>
     */
    firmament.ResourceVectorOuterClass.ResourceVector getResourceRequest();
    /**
     * <pre>
     * Task resource request and priority 
     * </pre>
     *
     * <code>optional .firmament.ResourceVector resource_request = 26;</code>
     */
    firmament.ResourceVectorOuterClass.ResourceVectorOrBuilder getResourceRequestOrBuilder();

    /**
     * <code>optional uint32 priority = 27;</code>
     */
    int getPriority();

    /**
     * <pre>
     * TODO(malte): move this to a policy-specific sub-message 
     * </pre>
     *
     * <code>optional .firmament.TaskDescriptor.TaskType task_type = 28;</code>
     */
    int getTaskTypeValue();
    /**
     * <pre>
     * TODO(malte): move this to a policy-specific sub-message 
     * </pre>
     *
     * <code>optional .firmament.TaskDescriptor.TaskType task_type = 28;</code>
     */
    firmament.TaskDesc.TaskDescriptor.TaskType getTaskType();

    /**
     * <pre>
     * Final report after successful execution 
     * </pre>
     *
     * <code>optional .firmament.TaskFinalReport final_report = 29;</code>
     */
    boolean hasFinalReport();
    /**
     * <pre>
     * Final report after successful execution 
     * </pre>
     *
     * <code>optional .firmament.TaskFinalReport final_report = 29;</code>
     */
    firmament.TaskFinalReportOuterClass.TaskFinalReport getFinalReport();
    /**
     * <pre>
     * Final report after successful execution 
     * </pre>
     *
     * <code>optional .firmament.TaskFinalReport final_report = 29;</code>
     */
    firmament.TaskFinalReportOuterClass.TaskFinalReportOrBuilder getFinalReportOrBuilder();

    /**
     * <pre>
     * Simulation related fields
     * </pre>
     *
     * <code>optional uint64 trace_job_id = 30;</code>
     */
    long getTraceJobId();

    /**
     * <code>optional uint64 trace_task_id = 31;</code>
     */
    long getTraceTaskId();

    /**
     * <pre>
     * Task labels 
     * </pre>
     *
     * <code>repeated .firmament.Label labels = 32;</code>
     */
    java.util.List<firmament.LabelOuterClass.Label> 
        getLabelsList();
    /**
     * <pre>
     * Task labels 
     * </pre>
     *
     * <code>repeated .firmament.Label labels = 32;</code>
     */
    firmament.LabelOuterClass.Label getLabels(int index);
    /**
     * <pre>
     * Task labels 
     * </pre>
     *
     * <code>repeated .firmament.Label labels = 32;</code>
     */
    int getLabelsCount();
    /**
     * <pre>
     * Task labels 
     * </pre>
     *
     * <code>repeated .firmament.Label labels = 32;</code>
     */
    java.util.List<? extends firmament.LabelOuterClass.LabelOrBuilder> 
        getLabelsOrBuilderList();
    /**
     * <pre>
     * Task labels 
     * </pre>
     *
     * <code>repeated .firmament.Label labels = 32;</code>
     */
    firmament.LabelOuterClass.LabelOrBuilder getLabelsOrBuilder(
        int index);

    /**
     * <pre>
     * Resource label selectors 
     * </pre>
     *
     * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
     */
    java.util.List<firmament.LabelSelectorOuterClass.LabelSelector> 
        getLabelSelectorsList();
    /**
     * <pre>
     * Resource label selectors 
     * </pre>
     *
     * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
     */
    firmament.LabelSelectorOuterClass.LabelSelector getLabelSelectors(int index);
    /**
     * <pre>
     * Resource label selectors 
     * </pre>
     *
     * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
     */
    int getLabelSelectorsCount();
    /**
     * <pre>
     * Resource label selectors 
     * </pre>
     *
     * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
     */
    java.util.List<? extends firmament.LabelSelectorOuterClass.LabelSelectorOrBuilder> 
        getLabelSelectorsOrBuilderList();
    /**
     * <pre>
     * Resource label selectors 
     * </pre>
     *
     * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
     */
    firmament.LabelSelectorOuterClass.LabelSelectorOrBuilder getLabelSelectorsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code firmament.TaskDescriptor}
   */
  public  static final class TaskDescriptor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:firmament.TaskDescriptor)
      TaskDescriptorOrBuilder {
    // Use TaskDescriptor.newBuilder() to construct.
    private TaskDescriptor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TaskDescriptor() {
      uid_ = 0L;
      name_ = "";
      state_ = 0;
      jobId_ = "";
      index_ = 0L;
      dependencies_ = java.util.Collections.emptyList();
      outputs_ = java.util.Collections.emptyList();
      binary_ = "";
      args_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      spawned_ = java.util.Collections.emptyList();
      scheduledToResource_ = "";
      lastHeartbeatLocation_ = "";
      lastHeartbeatTime_ = 0L;
      delegatedTo_ = "";
      delegatedFrom_ = "";
      submitTime_ = 0L;
      startTime_ = 0L;
      finishTime_ = 0L;
      totalUnscheduledTime_ = 0L;
      totalRunTime_ = 0L;
      relativeDeadline_ = 0L;
      absoluteDeadline_ = 0L;
      port_ = 0L;
      inputSize_ = 0L;
      injectTaskLib_ = false;
      priority_ = 0;
      taskType_ = 0;
      traceJobId_ = 0L;
      traceTaskId_ = 0L;
      labels_ = java.util.Collections.emptyList();
      labelSelectors_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TaskDescriptor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              uid_ = input.readUInt64();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              state_ = rawValue;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              jobId_ = s;
              break;
            }
            case 40: {

              index_ = input.readUInt64();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                dependencies_ = new java.util.ArrayList<firmament.ReferenceDesc.ReferenceDescriptor>();
                mutable_bitField0_ |= 0x00000020;
              }
              dependencies_.add(
                  input.readMessage(firmament.ReferenceDesc.ReferenceDescriptor.parser(), extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                outputs_ = new java.util.ArrayList<firmament.ReferenceDesc.ReferenceDescriptor>();
                mutable_bitField0_ |= 0x00000040;
              }
              outputs_.add(
                  input.readMessage(firmament.ReferenceDesc.ReferenceDescriptor.parser(), extensionRegistry));
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              binary_ = s;
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                args_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000100;
              }
              args_.add(s);
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                spawned_ = new java.util.ArrayList<firmament.TaskDesc.TaskDescriptor>();
                mutable_bitField0_ |= 0x00000200;
              }
              spawned_.add(
                  input.readMessage(firmament.TaskDesc.TaskDescriptor.parser(), extensionRegistry));
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              scheduledToResource_ = s;
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();

              lastHeartbeatLocation_ = s;
              break;
            }
            case 104: {

              lastHeartbeatTime_ = input.readUInt64();
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();

              delegatedTo_ = s;
              break;
            }
            case 122: {
              java.lang.String s = input.readStringRequireUtf8();

              delegatedFrom_ = s;
              break;
            }
            case 128: {

              submitTime_ = input.readUInt64();
              break;
            }
            case 136: {

              startTime_ = input.readUInt64();
              break;
            }
            case 144: {

              finishTime_ = input.readUInt64();
              break;
            }
            case 152: {

              totalUnscheduledTime_ = input.readUInt64();
              break;
            }
            case 160: {

              totalRunTime_ = input.readUInt64();
              break;
            }
            case 168: {

              relativeDeadline_ = input.readUInt64();
              break;
            }
            case 176: {

              absoluteDeadline_ = input.readUInt64();
              break;
            }
            case 184: {

              port_ = input.readUInt64();
              break;
            }
            case 192: {

              inputSize_ = input.readUInt64();
              break;
            }
            case 200: {

              injectTaskLib_ = input.readBool();
              break;
            }
            case 210: {
              firmament.ResourceVectorOuterClass.ResourceVector.Builder subBuilder = null;
              if (resourceRequest_ != null) {
                subBuilder = resourceRequest_.toBuilder();
              }
              resourceRequest_ = input.readMessage(firmament.ResourceVectorOuterClass.ResourceVector.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resourceRequest_);
                resourceRequest_ = subBuilder.buildPartial();
              }

              break;
            }
            case 216: {

              priority_ = input.readUInt32();
              break;
            }
            case 224: {
              int rawValue = input.readEnum();

              taskType_ = rawValue;
              break;
            }
            case 234: {
              firmament.TaskFinalReportOuterClass.TaskFinalReport.Builder subBuilder = null;
              if (finalReport_ != null) {
                subBuilder = finalReport_.toBuilder();
              }
              finalReport_ = input.readMessage(firmament.TaskFinalReportOuterClass.TaskFinalReport.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(finalReport_);
                finalReport_ = subBuilder.buildPartial();
              }

              break;
            }
            case 240: {

              traceJobId_ = input.readUInt64();
              break;
            }
            case 248: {

              traceTaskId_ = input.readUInt64();
              break;
            }
            case 258: {
              if (!((mutable_bitField0_ & 0x80000000) == 0x80000000)) {
                labels_ = new java.util.ArrayList<firmament.LabelOuterClass.Label>();
                mutable_bitField0_ |= 0x80000000;
              }
              labels_.add(
                  input.readMessage(firmament.LabelOuterClass.Label.parser(), extensionRegistry));
              break;
            }
            case 266: {
              if (!((mutable_bitField1_ & 0x00000001) == 0x00000001)) {
                labelSelectors_ = new java.util.ArrayList<firmament.LabelSelectorOuterClass.LabelSelector>();
                mutable_bitField1_ |= 0x00000001;
              }
              labelSelectors_.add(
                  input.readMessage(firmament.LabelSelectorOuterClass.LabelSelector.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          dependencies_ = java.util.Collections.unmodifiableList(dependencies_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          outputs_ = java.util.Collections.unmodifiableList(outputs_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          args_ = args_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          spawned_ = java.util.Collections.unmodifiableList(spawned_);
        }
        if (((mutable_bitField0_ & 0x80000000) == 0x80000000)) {
          labels_ = java.util.Collections.unmodifiableList(labels_);
        }
        if (((mutable_bitField1_ & 0x00000001) == 0x00000001)) {
          labelSelectors_ = java.util.Collections.unmodifiableList(labelSelectors_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return firmament.TaskDesc.internal_static_firmament_TaskDescriptor_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return firmament.TaskDesc.internal_static_firmament_TaskDescriptor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              firmament.TaskDesc.TaskDescriptor.class, firmament.TaskDesc.TaskDescriptor.Builder.class);
    }

    /**
     * Protobuf enum {@code firmament.TaskDescriptor.TaskState}
     */
    public enum TaskState
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CREATED = 0;</code>
       */
      CREATED(0),
      /**
       * <code>BLOCKING = 1;</code>
       */
      BLOCKING(1),
      /**
       * <code>RUNNABLE = 2;</code>
       */
      RUNNABLE(2),
      /**
       * <code>ASSIGNED = 3;</code>
       */
      ASSIGNED(3),
      /**
       * <code>RUNNING = 4;</code>
       */
      RUNNING(4),
      /**
       * <code>COMPLETED = 5;</code>
       */
      COMPLETED(5),
      /**
       * <code>FAILED = 6;</code>
       */
      FAILED(6),
      /**
       * <code>ABORTED = 7;</code>
       */
      ABORTED(7),
      /**
       * <code>DELEGATED = 8;</code>
       */
      DELEGATED(8),
      /**
       * <code>UNKNOWN = 9;</code>
       */
      UNKNOWN(9),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>CREATED = 0;</code>
       */
      public static final int CREATED_VALUE = 0;
      /**
       * <code>BLOCKING = 1;</code>
       */
      public static final int BLOCKING_VALUE = 1;
      /**
       * <code>RUNNABLE = 2;</code>
       */
      public static final int RUNNABLE_VALUE = 2;
      /**
       * <code>ASSIGNED = 3;</code>
       */
      public static final int ASSIGNED_VALUE = 3;
      /**
       * <code>RUNNING = 4;</code>
       */
      public static final int RUNNING_VALUE = 4;
      /**
       * <code>COMPLETED = 5;</code>
       */
      public static final int COMPLETED_VALUE = 5;
      /**
       * <code>FAILED = 6;</code>
       */
      public static final int FAILED_VALUE = 6;
      /**
       * <code>ABORTED = 7;</code>
       */
      public static final int ABORTED_VALUE = 7;
      /**
       * <code>DELEGATED = 8;</code>
       */
      public static final int DELEGATED_VALUE = 8;
      /**
       * <code>UNKNOWN = 9;</code>
       */
      public static final int UNKNOWN_VALUE = 9;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TaskState valueOf(int value) {
        return forNumber(value);
      }

      public static TaskState forNumber(int value) {
        switch (value) {
          case 0: return CREATED;
          case 1: return BLOCKING;
          case 2: return RUNNABLE;
          case 3: return ASSIGNED;
          case 4: return RUNNING;
          case 5: return COMPLETED;
          case 6: return FAILED;
          case 7: return ABORTED;
          case 8: return DELEGATED;
          case 9: return UNKNOWN;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TaskState>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          TaskState> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TaskState>() {
              public TaskState findValueByNumber(int number) {
                return TaskState.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return firmament.TaskDesc.TaskDescriptor.getDescriptor().getEnumTypes().get(0);
      }

      private static final TaskState[] VALUES = values();

      public static TaskState valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TaskState(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:firmament.TaskDescriptor.TaskState)
    }

    /**
     * Protobuf enum {@code firmament.TaskDescriptor.TaskType}
     */
    public enum TaskType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SHEEP = 0;</code>
       */
      SHEEP(0),
      /**
       * <code>RABBIT = 1;</code>
       */
      RABBIT(1),
      /**
       * <code>DEVIL = 2;</code>
       */
      DEVIL(2),
      /**
       * <code>TURTLE = 3;</code>
       */
      TURTLE(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>SHEEP = 0;</code>
       */
      public static final int SHEEP_VALUE = 0;
      /**
       * <code>RABBIT = 1;</code>
       */
      public static final int RABBIT_VALUE = 1;
      /**
       * <code>DEVIL = 2;</code>
       */
      public static final int DEVIL_VALUE = 2;
      /**
       * <code>TURTLE = 3;</code>
       */
      public static final int TURTLE_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TaskType valueOf(int value) {
        return forNumber(value);
      }

      public static TaskType forNumber(int value) {
        switch (value) {
          case 0: return SHEEP;
          case 1: return RABBIT;
          case 2: return DEVIL;
          case 3: return TURTLE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TaskType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          TaskType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TaskType>() {
              public TaskType findValueByNumber(int number) {
                return TaskType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return firmament.TaskDesc.TaskDescriptor.getDescriptor().getEnumTypes().get(1);
      }

      private static final TaskType[] VALUES = values();

      public static TaskType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TaskType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:firmament.TaskDescriptor.TaskType)
    }

    private int bitField0_;
    public static final int UID_FIELD_NUMBER = 1;
    private long uid_;
    /**
     * <code>optional uint64 uid = 1;</code>
     */
    public long getUid() {
      return uid_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STATE_FIELD_NUMBER = 3;
    private int state_;
    /**
     * <code>optional .firmament.TaskDescriptor.TaskState state = 3;</code>
     */
    public int getStateValue() {
      return state_;
    }
    /**
     * <code>optional .firmament.TaskDescriptor.TaskState state = 3;</code>
     */
    public firmament.TaskDesc.TaskDescriptor.TaskState getState() {
      firmament.TaskDesc.TaskDescriptor.TaskState result = firmament.TaskDesc.TaskDescriptor.TaskState.valueOf(state_);
      return result == null ? firmament.TaskDesc.TaskDescriptor.TaskState.UNRECOGNIZED : result;
    }

    public static final int JOB_ID_FIELD_NUMBER = 4;
    private volatile java.lang.Object jobId_;
    /**
     * <code>optional string job_id = 4;</code>
     */
    public java.lang.String getJobId() {
      java.lang.Object ref = jobId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        jobId_ = s;
        return s;
      }
    }
    /**
     * <code>optional string job_id = 4;</code>
     */
    public com.google.protobuf.ByteString
        getJobIdBytes() {
      java.lang.Object ref = jobId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        jobId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INDEX_FIELD_NUMBER = 5;
    private long index_;
    /**
     * <code>optional uint64 index = 5;</code>
     */
    public long getIndex() {
      return index_;
    }

    public static final int DEPENDENCIES_FIELD_NUMBER = 6;
    private java.util.List<firmament.ReferenceDesc.ReferenceDescriptor> dependencies_;
    /**
     * <pre>
     * Inputs/outputs 
     * </pre>
     *
     * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
     */
    public java.util.List<firmament.ReferenceDesc.ReferenceDescriptor> getDependenciesList() {
      return dependencies_;
    }
    /**
     * <pre>
     * Inputs/outputs 
     * </pre>
     *
     * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
     */
    public java.util.List<? extends firmament.ReferenceDesc.ReferenceDescriptorOrBuilder> 
        getDependenciesOrBuilderList() {
      return dependencies_;
    }
    /**
     * <pre>
     * Inputs/outputs 
     * </pre>
     *
     * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
     */
    public int getDependenciesCount() {
      return dependencies_.size();
    }
    /**
     * <pre>
     * Inputs/outputs 
     * </pre>
     *
     * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
     */
    public firmament.ReferenceDesc.ReferenceDescriptor getDependencies(int index) {
      return dependencies_.get(index);
    }
    /**
     * <pre>
     * Inputs/outputs 
     * </pre>
     *
     * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
     */
    public firmament.ReferenceDesc.ReferenceDescriptorOrBuilder getDependenciesOrBuilder(
        int index) {
      return dependencies_.get(index);
    }

    public static final int OUTPUTS_FIELD_NUMBER = 7;
    private java.util.List<firmament.ReferenceDesc.ReferenceDescriptor> outputs_;
    /**
     * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
     */
    public java.util.List<firmament.ReferenceDesc.ReferenceDescriptor> getOutputsList() {
      return outputs_;
    }
    /**
     * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
     */
    public java.util.List<? extends firmament.ReferenceDesc.ReferenceDescriptorOrBuilder> 
        getOutputsOrBuilderList() {
      return outputs_;
    }
    /**
     * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
     */
    public int getOutputsCount() {
      return outputs_.size();
    }
    /**
     * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
     */
    public firmament.ReferenceDesc.ReferenceDescriptor getOutputs(int index) {
      return outputs_.get(index);
    }
    /**
     * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
     */
    public firmament.ReferenceDesc.ReferenceDescriptorOrBuilder getOutputsOrBuilder(
        int index) {
      return outputs_.get(index);
    }

    public static final int BINARY_FIELD_NUMBER = 8;
    private volatile java.lang.Object binary_;
    /**
     * <pre>
     * Command and arguments 
     * </pre>
     *
     * <code>optional string binary = 8;</code>
     */
    public java.lang.String getBinary() {
      java.lang.Object ref = binary_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        binary_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Command and arguments 
     * </pre>
     *
     * <code>optional string binary = 8;</code>
     */
    public com.google.protobuf.ByteString
        getBinaryBytes() {
      java.lang.Object ref = binary_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        binary_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ARGS_FIELD_NUMBER = 9;
    private com.google.protobuf.LazyStringList args_;
    /**
     * <code>repeated string args = 9;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getArgsList() {
      return args_;
    }
    /**
     * <code>repeated string args = 9;</code>
     */
    public int getArgsCount() {
      return args_.size();
    }
    /**
     * <code>repeated string args = 9;</code>
     */
    public java.lang.String getArgs(int index) {
      return args_.get(index);
    }
    /**
     * <code>repeated string args = 9;</code>
     */
    public com.google.protobuf.ByteString
        getArgsBytes(int index) {
      return args_.getByteString(index);
    }

    public static final int SPAWNED_FIELD_NUMBER = 10;
    private java.util.List<firmament.TaskDesc.TaskDescriptor> spawned_;
    /**
     * <pre>
     * Children 
     * </pre>
     *
     * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
     */
    public java.util.List<firmament.TaskDesc.TaskDescriptor> getSpawnedList() {
      return spawned_;
    }
    /**
     * <pre>
     * Children 
     * </pre>
     *
     * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
     */
    public java.util.List<? extends firmament.TaskDesc.TaskDescriptorOrBuilder> 
        getSpawnedOrBuilderList() {
      return spawned_;
    }
    /**
     * <pre>
     * Children 
     * </pre>
     *
     * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
     */
    public int getSpawnedCount() {
      return spawned_.size();
    }
    /**
     * <pre>
     * Children 
     * </pre>
     *
     * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
     */
    public firmament.TaskDesc.TaskDescriptor getSpawned(int index) {
      return spawned_.get(index);
    }
    /**
     * <pre>
     * Children 
     * </pre>
     *
     * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
     */
    public firmament.TaskDesc.TaskDescriptorOrBuilder getSpawnedOrBuilder(
        int index) {
      return spawned_.get(index);
    }

    public static final int SCHEDULED_TO_RESOURCE_FIELD_NUMBER = 11;
    private volatile java.lang.Object scheduledToResource_;
    /**
     * <pre>
     * Runtime meta-data 
     * </pre>
     *
     * <code>optional string scheduled_to_resource = 11;</code>
     */
    public java.lang.String getScheduledToResource() {
      java.lang.Object ref = scheduledToResource_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        scheduledToResource_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Runtime meta-data 
     * </pre>
     *
     * <code>optional string scheduled_to_resource = 11;</code>
     */
    public com.google.protobuf.ByteString
        getScheduledToResourceBytes() {
      java.lang.Object ref = scheduledToResource_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        scheduledToResource_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_HEARTBEAT_LOCATION_FIELD_NUMBER = 12;
    private volatile java.lang.Object lastHeartbeatLocation_;
    /**
     * <code>optional string last_heartbeat_location = 12;</code>
     */
    public java.lang.String getLastHeartbeatLocation() {
      java.lang.Object ref = lastHeartbeatLocation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastHeartbeatLocation_ = s;
        return s;
      }
    }
    /**
     * <code>optional string last_heartbeat_location = 12;</code>
     */
    public com.google.protobuf.ByteString
        getLastHeartbeatLocationBytes() {
      java.lang.Object ref = lastHeartbeatLocation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastHeartbeatLocation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_HEARTBEAT_TIME_FIELD_NUMBER = 13;
    private long lastHeartbeatTime_;
    /**
     * <code>optional uint64 last_heartbeat_time = 13;</code>
     */
    public long getLastHeartbeatTime() {
      return lastHeartbeatTime_;
    }

    public static final int DELEGATED_TO_FIELD_NUMBER = 14;
    private volatile java.lang.Object delegatedTo_;
    /**
     * <pre>
     * Delegation info 
     * </pre>
     *
     * <code>optional string delegated_to = 14;</code>
     */
    public java.lang.String getDelegatedTo() {
      java.lang.Object ref = delegatedTo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        delegatedTo_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Delegation info 
     * </pre>
     *
     * <code>optional string delegated_to = 14;</code>
     */
    public com.google.protobuf.ByteString
        getDelegatedToBytes() {
      java.lang.Object ref = delegatedTo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        delegatedTo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DELEGATED_FROM_FIELD_NUMBER = 15;
    private volatile java.lang.Object delegatedFrom_;
    /**
     * <code>optional string delegated_from = 15;</code>
     */
    public java.lang.String getDelegatedFrom() {
      java.lang.Object ref = delegatedFrom_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        delegatedFrom_ = s;
        return s;
      }
    }
    /**
     * <code>optional string delegated_from = 15;</code>
     */
    public com.google.protobuf.ByteString
        getDelegatedFromBytes() {
      java.lang.Object ref = delegatedFrom_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        delegatedFrom_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUBMIT_TIME_FIELD_NUMBER = 16;
    private long submitTime_;
    /**
     * <pre>
     * Timestamps 
     * </pre>
     *
     * <code>optional uint64 submit_time = 16;</code>
     */
    public long getSubmitTime() {
      return submitTime_;
    }

    public static final int START_TIME_FIELD_NUMBER = 17;
    private long startTime_;
    /**
     * <code>optional uint64 start_time = 17;</code>
     */
    public long getStartTime() {
      return startTime_;
    }

    public static final int FINISH_TIME_FIELD_NUMBER = 18;
    private long finishTime_;
    /**
     * <code>optional uint64 finish_time = 18;</code>
     */
    public long getFinishTime() {
      return finishTime_;
    }

    public static final int TOTAL_UNSCHEDULED_TIME_FIELD_NUMBER = 19;
    private long totalUnscheduledTime_;
    /**
     * <pre>
     * The total time spent unscheduled before previous runs. 
     * </pre>
     *
     * <code>optional uint64 total_unscheduled_time = 19;</code>
     */
    public long getTotalUnscheduledTime() {
      return totalUnscheduledTime_;
    }

    public static final int TOTAL_RUN_TIME_FIELD_NUMBER = 20;
    private long totalRunTime_;
    /**
     * <pre>
     * The total time spent in previous runs. This field only gets updated when
     *the task finishes running. 
     * </pre>
     *
     * <code>optional uint64 total_run_time = 20;</code>
     */
    public long getTotalRunTime() {
      return totalRunTime_;
    }

    public static final int RELATIVE_DEADLINE_FIELD_NUMBER = 21;
    private long relativeDeadline_;
    /**
     * <pre>
     * Deadlines 
     * </pre>
     *
     * <code>optional uint64 relative_deadline = 21;</code>
     */
    public long getRelativeDeadline() {
      return relativeDeadline_;
    }

    public static final int ABSOLUTE_DEADLINE_FIELD_NUMBER = 22;
    private long absoluteDeadline_;
    /**
     * <pre>
     * Application-specific fields 
     * </pre>
     *
     * <code>optional uint64 absolute_deadline = 22;</code>
     */
    public long getAbsoluteDeadline() {
      return absoluteDeadline_;
    }

    public static final int PORT_FIELD_NUMBER = 23;
    private long port_;
    /**
     * <pre>
     * TODO(malte): move these to sub-messages 
     * </pre>
     *
     * <code>optional uint64 port = 23;</code>
     */
    public long getPort() {
      return port_;
    }

    public static final int INPUT_SIZE_FIELD_NUMBER = 24;
    private long inputSize_;
    /**
     * <code>optional uint64 input_size = 24;</code>
     */
    public long getInputSize() {
      return inputSize_;
    }

    public static final int INJECT_TASK_LIB_FIELD_NUMBER = 25;
    private boolean injectTaskLib_;
    /**
     * <pre>
     * TaskLib related stuff 
     * </pre>
     *
     * <code>optional bool inject_task_lib = 25;</code>
     */
    public boolean getInjectTaskLib() {
      return injectTaskLib_;
    }

    public static final int RESOURCE_REQUEST_FIELD_NUMBER = 26;
    private firmament.ResourceVectorOuterClass.ResourceVector resourceRequest_;
    /**
     * <pre>
     * Task resource request and priority 
     * </pre>
     *
     * <code>optional .firmament.ResourceVector resource_request = 26;</code>
     */
    public boolean hasResourceRequest() {
      return resourceRequest_ != null;
    }
    /**
     * <pre>
     * Task resource request and priority 
     * </pre>
     *
     * <code>optional .firmament.ResourceVector resource_request = 26;</code>
     */
    public firmament.ResourceVectorOuterClass.ResourceVector getResourceRequest() {
      return resourceRequest_ == null ? firmament.ResourceVectorOuterClass.ResourceVector.getDefaultInstance() : resourceRequest_;
    }
    /**
     * <pre>
     * Task resource request and priority 
     * </pre>
     *
     * <code>optional .firmament.ResourceVector resource_request = 26;</code>
     */
    public firmament.ResourceVectorOuterClass.ResourceVectorOrBuilder getResourceRequestOrBuilder() {
      return getResourceRequest();
    }

    public static final int PRIORITY_FIELD_NUMBER = 27;
    private int priority_;
    /**
     * <code>optional uint32 priority = 27;</code>
     */
    public int getPriority() {
      return priority_;
    }

    public static final int TASK_TYPE_FIELD_NUMBER = 28;
    private int taskType_;
    /**
     * <pre>
     * TODO(malte): move this to a policy-specific sub-message 
     * </pre>
     *
     * <code>optional .firmament.TaskDescriptor.TaskType task_type = 28;</code>
     */
    public int getTaskTypeValue() {
      return taskType_;
    }
    /**
     * <pre>
     * TODO(malte): move this to a policy-specific sub-message 
     * </pre>
     *
     * <code>optional .firmament.TaskDescriptor.TaskType task_type = 28;</code>
     */
    public firmament.TaskDesc.TaskDescriptor.TaskType getTaskType() {
      firmament.TaskDesc.TaskDescriptor.TaskType result = firmament.TaskDesc.TaskDescriptor.TaskType.valueOf(taskType_);
      return result == null ? firmament.TaskDesc.TaskDescriptor.TaskType.UNRECOGNIZED : result;
    }

    public static final int FINAL_REPORT_FIELD_NUMBER = 29;
    private firmament.TaskFinalReportOuterClass.TaskFinalReport finalReport_;
    /**
     * <pre>
     * Final report after successful execution 
     * </pre>
     *
     * <code>optional .firmament.TaskFinalReport final_report = 29;</code>
     */
    public boolean hasFinalReport() {
      return finalReport_ != null;
    }
    /**
     * <pre>
     * Final report after successful execution 
     * </pre>
     *
     * <code>optional .firmament.TaskFinalReport final_report = 29;</code>
     */
    public firmament.TaskFinalReportOuterClass.TaskFinalReport getFinalReport() {
      return finalReport_ == null ? firmament.TaskFinalReportOuterClass.TaskFinalReport.getDefaultInstance() : finalReport_;
    }
    /**
     * <pre>
     * Final report after successful execution 
     * </pre>
     *
     * <code>optional .firmament.TaskFinalReport final_report = 29;</code>
     */
    public firmament.TaskFinalReportOuterClass.TaskFinalReportOrBuilder getFinalReportOrBuilder() {
      return getFinalReport();
    }

    public static final int TRACE_JOB_ID_FIELD_NUMBER = 30;
    private long traceJobId_;
    /**
     * <pre>
     * Simulation related fields
     * </pre>
     *
     * <code>optional uint64 trace_job_id = 30;</code>
     */
    public long getTraceJobId() {
      return traceJobId_;
    }

    public static final int TRACE_TASK_ID_FIELD_NUMBER = 31;
    private long traceTaskId_;
    /**
     * <code>optional uint64 trace_task_id = 31;</code>
     */
    public long getTraceTaskId() {
      return traceTaskId_;
    }

    public static final int LABELS_FIELD_NUMBER = 32;
    private java.util.List<firmament.LabelOuterClass.Label> labels_;
    /**
     * <pre>
     * Task labels 
     * </pre>
     *
     * <code>repeated .firmament.Label labels = 32;</code>
     */
    public java.util.List<firmament.LabelOuterClass.Label> getLabelsList() {
      return labels_;
    }
    /**
     * <pre>
     * Task labels 
     * </pre>
     *
     * <code>repeated .firmament.Label labels = 32;</code>
     */
    public java.util.List<? extends firmament.LabelOuterClass.LabelOrBuilder> 
        getLabelsOrBuilderList() {
      return labels_;
    }
    /**
     * <pre>
     * Task labels 
     * </pre>
     *
     * <code>repeated .firmament.Label labels = 32;</code>
     */
    public int getLabelsCount() {
      return labels_.size();
    }
    /**
     * <pre>
     * Task labels 
     * </pre>
     *
     * <code>repeated .firmament.Label labels = 32;</code>
     */
    public firmament.LabelOuterClass.Label getLabels(int index) {
      return labels_.get(index);
    }
    /**
     * <pre>
     * Task labels 
     * </pre>
     *
     * <code>repeated .firmament.Label labels = 32;</code>
     */
    public firmament.LabelOuterClass.LabelOrBuilder getLabelsOrBuilder(
        int index) {
      return labels_.get(index);
    }

    public static final int LABEL_SELECTORS_FIELD_NUMBER = 33;
    private java.util.List<firmament.LabelSelectorOuterClass.LabelSelector> labelSelectors_;
    /**
     * <pre>
     * Resource label selectors 
     * </pre>
     *
     * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
     */
    public java.util.List<firmament.LabelSelectorOuterClass.LabelSelector> getLabelSelectorsList() {
      return labelSelectors_;
    }
    /**
     * <pre>
     * Resource label selectors 
     * </pre>
     *
     * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
     */
    public java.util.List<? extends firmament.LabelSelectorOuterClass.LabelSelectorOrBuilder> 
        getLabelSelectorsOrBuilderList() {
      return labelSelectors_;
    }
    /**
     * <pre>
     * Resource label selectors 
     * </pre>
     *
     * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
     */
    public int getLabelSelectorsCount() {
      return labelSelectors_.size();
    }
    /**
     * <pre>
     * Resource label selectors 
     * </pre>
     *
     * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
     */
    public firmament.LabelSelectorOuterClass.LabelSelector getLabelSelectors(int index) {
      return labelSelectors_.get(index);
    }
    /**
     * <pre>
     * Resource label selectors 
     * </pre>
     *
     * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
     */
    public firmament.LabelSelectorOuterClass.LabelSelectorOrBuilder getLabelSelectorsOrBuilder(
        int index) {
      return labelSelectors_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (uid_ != 0L) {
        output.writeUInt64(1, uid_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (state_ != firmament.TaskDesc.TaskDescriptor.TaskState.CREATED.getNumber()) {
        output.writeEnum(3, state_);
      }
      if (!getJobIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, jobId_);
      }
      if (index_ != 0L) {
        output.writeUInt64(5, index_);
      }
      for (int i = 0; i < dependencies_.size(); i++) {
        output.writeMessage(6, dependencies_.get(i));
      }
      for (int i = 0; i < outputs_.size(); i++) {
        output.writeMessage(7, outputs_.get(i));
      }
      if (!getBinaryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, binary_);
      }
      for (int i = 0; i < args_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, args_.getRaw(i));
      }
      for (int i = 0; i < spawned_.size(); i++) {
        output.writeMessage(10, spawned_.get(i));
      }
      if (!getScheduledToResourceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, scheduledToResource_);
      }
      if (!getLastHeartbeatLocationBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, lastHeartbeatLocation_);
      }
      if (lastHeartbeatTime_ != 0L) {
        output.writeUInt64(13, lastHeartbeatTime_);
      }
      if (!getDelegatedToBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, delegatedTo_);
      }
      if (!getDelegatedFromBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, delegatedFrom_);
      }
      if (submitTime_ != 0L) {
        output.writeUInt64(16, submitTime_);
      }
      if (startTime_ != 0L) {
        output.writeUInt64(17, startTime_);
      }
      if (finishTime_ != 0L) {
        output.writeUInt64(18, finishTime_);
      }
      if (totalUnscheduledTime_ != 0L) {
        output.writeUInt64(19, totalUnscheduledTime_);
      }
      if (totalRunTime_ != 0L) {
        output.writeUInt64(20, totalRunTime_);
      }
      if (relativeDeadline_ != 0L) {
        output.writeUInt64(21, relativeDeadline_);
      }
      if (absoluteDeadline_ != 0L) {
        output.writeUInt64(22, absoluteDeadline_);
      }
      if (port_ != 0L) {
        output.writeUInt64(23, port_);
      }
      if (inputSize_ != 0L) {
        output.writeUInt64(24, inputSize_);
      }
      if (injectTaskLib_ != false) {
        output.writeBool(25, injectTaskLib_);
      }
      if (resourceRequest_ != null) {
        output.writeMessage(26, getResourceRequest());
      }
      if (priority_ != 0) {
        output.writeUInt32(27, priority_);
      }
      if (taskType_ != firmament.TaskDesc.TaskDescriptor.TaskType.SHEEP.getNumber()) {
        output.writeEnum(28, taskType_);
      }
      if (finalReport_ != null) {
        output.writeMessage(29, getFinalReport());
      }
      if (traceJobId_ != 0L) {
        output.writeUInt64(30, traceJobId_);
      }
      if (traceTaskId_ != 0L) {
        output.writeUInt64(31, traceTaskId_);
      }
      for (int i = 0; i < labels_.size(); i++) {
        output.writeMessage(32, labels_.get(i));
      }
      for (int i = 0; i < labelSelectors_.size(); i++) {
        output.writeMessage(33, labelSelectors_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (uid_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, uid_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (state_ != firmament.TaskDesc.TaskDescriptor.TaskState.CREATED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, state_);
      }
      if (!getJobIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, jobId_);
      }
      if (index_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, index_);
      }
      for (int i = 0; i < dependencies_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, dependencies_.get(i));
      }
      for (int i = 0; i < outputs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, outputs_.get(i));
      }
      if (!getBinaryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, binary_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < args_.size(); i++) {
          dataSize += computeStringSizeNoTag(args_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getArgsList().size();
      }
      for (int i = 0; i < spawned_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, spawned_.get(i));
      }
      if (!getScheduledToResourceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, scheduledToResource_);
      }
      if (!getLastHeartbeatLocationBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, lastHeartbeatLocation_);
      }
      if (lastHeartbeatTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(13, lastHeartbeatTime_);
      }
      if (!getDelegatedToBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, delegatedTo_);
      }
      if (!getDelegatedFromBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, delegatedFrom_);
      }
      if (submitTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(16, submitTime_);
      }
      if (startTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(17, startTime_);
      }
      if (finishTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(18, finishTime_);
      }
      if (totalUnscheduledTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(19, totalUnscheduledTime_);
      }
      if (totalRunTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(20, totalRunTime_);
      }
      if (relativeDeadline_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(21, relativeDeadline_);
      }
      if (absoluteDeadline_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(22, absoluteDeadline_);
      }
      if (port_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(23, port_);
      }
      if (inputSize_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(24, inputSize_);
      }
      if (injectTaskLib_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(25, injectTaskLib_);
      }
      if (resourceRequest_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(26, getResourceRequest());
      }
      if (priority_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(27, priority_);
      }
      if (taskType_ != firmament.TaskDesc.TaskDescriptor.TaskType.SHEEP.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(28, taskType_);
      }
      if (finalReport_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(29, getFinalReport());
      }
      if (traceJobId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(30, traceJobId_);
      }
      if (traceTaskId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(31, traceTaskId_);
      }
      for (int i = 0; i < labels_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, labels_.get(i));
      }
      for (int i = 0; i < labelSelectors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(33, labelSelectors_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof firmament.TaskDesc.TaskDescriptor)) {
        return super.equals(obj);
      }
      firmament.TaskDesc.TaskDescriptor other = (firmament.TaskDesc.TaskDescriptor) obj;

      boolean result = true;
      result = result && (getUid()
          == other.getUid());
      result = result && getName()
          .equals(other.getName());
      result = result && state_ == other.state_;
      result = result && getJobId()
          .equals(other.getJobId());
      result = result && (getIndex()
          == other.getIndex());
      result = result && getDependenciesList()
          .equals(other.getDependenciesList());
      result = result && getOutputsList()
          .equals(other.getOutputsList());
      result = result && getBinary()
          .equals(other.getBinary());
      result = result && getArgsList()
          .equals(other.getArgsList());
      result = result && getSpawnedList()
          .equals(other.getSpawnedList());
      result = result && getScheduledToResource()
          .equals(other.getScheduledToResource());
      result = result && getLastHeartbeatLocation()
          .equals(other.getLastHeartbeatLocation());
      result = result && (getLastHeartbeatTime()
          == other.getLastHeartbeatTime());
      result = result && getDelegatedTo()
          .equals(other.getDelegatedTo());
      result = result && getDelegatedFrom()
          .equals(other.getDelegatedFrom());
      result = result && (getSubmitTime()
          == other.getSubmitTime());
      result = result && (getStartTime()
          == other.getStartTime());
      result = result && (getFinishTime()
          == other.getFinishTime());
      result = result && (getTotalUnscheduledTime()
          == other.getTotalUnscheduledTime());
      result = result && (getTotalRunTime()
          == other.getTotalRunTime());
      result = result && (getRelativeDeadline()
          == other.getRelativeDeadline());
      result = result && (getAbsoluteDeadline()
          == other.getAbsoluteDeadline());
      result = result && (getPort()
          == other.getPort());
      result = result && (getInputSize()
          == other.getInputSize());
      result = result && (getInjectTaskLib()
          == other.getInjectTaskLib());
      result = result && (hasResourceRequest() == other.hasResourceRequest());
      if (hasResourceRequest()) {
        result = result && getResourceRequest()
            .equals(other.getResourceRequest());
      }
      result = result && (getPriority()
          == other.getPriority());
      result = result && taskType_ == other.taskType_;
      result = result && (hasFinalReport() == other.hasFinalReport());
      if (hasFinalReport()) {
        result = result && getFinalReport()
            .equals(other.getFinalReport());
      }
      result = result && (getTraceJobId()
          == other.getTraceJobId());
      result = result && (getTraceTaskId()
          == other.getTraceTaskId());
      result = result && getLabelsList()
          .equals(other.getLabelsList());
      result = result && getLabelSelectorsList()
          .equals(other.getLabelSelectorsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + UID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUid());
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + STATE_FIELD_NUMBER;
      hash = (53 * hash) + state_;
      hash = (37 * hash) + JOB_ID_FIELD_NUMBER;
      hash = (53 * hash) + getJobId().hashCode();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getIndex());
      if (getDependenciesCount() > 0) {
        hash = (37 * hash) + DEPENDENCIES_FIELD_NUMBER;
        hash = (53 * hash) + getDependenciesList().hashCode();
      }
      if (getOutputsCount() > 0) {
        hash = (37 * hash) + OUTPUTS_FIELD_NUMBER;
        hash = (53 * hash) + getOutputsList().hashCode();
      }
      hash = (37 * hash) + BINARY_FIELD_NUMBER;
      hash = (53 * hash) + getBinary().hashCode();
      if (getArgsCount() > 0) {
        hash = (37 * hash) + ARGS_FIELD_NUMBER;
        hash = (53 * hash) + getArgsList().hashCode();
      }
      if (getSpawnedCount() > 0) {
        hash = (37 * hash) + SPAWNED_FIELD_NUMBER;
        hash = (53 * hash) + getSpawnedList().hashCode();
      }
      hash = (37 * hash) + SCHEDULED_TO_RESOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getScheduledToResource().hashCode();
      hash = (37 * hash) + LAST_HEARTBEAT_LOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getLastHeartbeatLocation().hashCode();
      hash = (37 * hash) + LAST_HEARTBEAT_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLastHeartbeatTime());
      hash = (37 * hash) + DELEGATED_TO_FIELD_NUMBER;
      hash = (53 * hash) + getDelegatedTo().hashCode();
      hash = (37 * hash) + DELEGATED_FROM_FIELD_NUMBER;
      hash = (53 * hash) + getDelegatedFrom().hashCode();
      hash = (37 * hash) + SUBMIT_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSubmitTime());
      hash = (37 * hash) + START_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStartTime());
      hash = (37 * hash) + FINISH_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFinishTime());
      hash = (37 * hash) + TOTAL_UNSCHEDULED_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalUnscheduledTime());
      hash = (37 * hash) + TOTAL_RUN_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalRunTime());
      hash = (37 * hash) + RELATIVE_DEADLINE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRelativeDeadline());
      hash = (37 * hash) + ABSOLUTE_DEADLINE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAbsoluteDeadline());
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPort());
      hash = (37 * hash) + INPUT_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getInputSize());
      hash = (37 * hash) + INJECT_TASK_LIB_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getInjectTaskLib());
      if (hasResourceRequest()) {
        hash = (37 * hash) + RESOURCE_REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getResourceRequest().hashCode();
      }
      hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
      hash = (53 * hash) + getPriority();
      hash = (37 * hash) + TASK_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + taskType_;
      if (hasFinalReport()) {
        hash = (37 * hash) + FINAL_REPORT_FIELD_NUMBER;
        hash = (53 * hash) + getFinalReport().hashCode();
      }
      hash = (37 * hash) + TRACE_JOB_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTraceJobId());
      hash = (37 * hash) + TRACE_TASK_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTraceTaskId());
      if (getLabelsCount() > 0) {
        hash = (37 * hash) + LABELS_FIELD_NUMBER;
        hash = (53 * hash) + getLabelsList().hashCode();
      }
      if (getLabelSelectorsCount() > 0) {
        hash = (37 * hash) + LABEL_SELECTORS_FIELD_NUMBER;
        hash = (53 * hash) + getLabelSelectorsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static firmament.TaskDesc.TaskDescriptor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static firmament.TaskDesc.TaskDescriptor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static firmament.TaskDesc.TaskDescriptor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static firmament.TaskDesc.TaskDescriptor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static firmament.TaskDesc.TaskDescriptor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static firmament.TaskDesc.TaskDescriptor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static firmament.TaskDesc.TaskDescriptor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static firmament.TaskDesc.TaskDescriptor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static firmament.TaskDesc.TaskDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static firmament.TaskDesc.TaskDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(firmament.TaskDesc.TaskDescriptor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code firmament.TaskDescriptor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:firmament.TaskDescriptor)
        firmament.TaskDesc.TaskDescriptorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return firmament.TaskDesc.internal_static_firmament_TaskDescriptor_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return firmament.TaskDesc.internal_static_firmament_TaskDescriptor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                firmament.TaskDesc.TaskDescriptor.class, firmament.TaskDesc.TaskDescriptor.Builder.class);
      }

      // Construct using firmament.TaskDesc.TaskDescriptor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDependenciesFieldBuilder();
          getOutputsFieldBuilder();
          getSpawnedFieldBuilder();
          getLabelsFieldBuilder();
          getLabelSelectorsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        uid_ = 0L;

        name_ = "";

        state_ = 0;

        jobId_ = "";

        index_ = 0L;

        if (dependenciesBuilder_ == null) {
          dependencies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          dependenciesBuilder_.clear();
        }
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          outputsBuilder_.clear();
        }
        binary_ = "";

        args_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (spawnedBuilder_ == null) {
          spawned_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          spawnedBuilder_.clear();
        }
        scheduledToResource_ = "";

        lastHeartbeatLocation_ = "";

        lastHeartbeatTime_ = 0L;

        delegatedTo_ = "";

        delegatedFrom_ = "";

        submitTime_ = 0L;

        startTime_ = 0L;

        finishTime_ = 0L;

        totalUnscheduledTime_ = 0L;

        totalRunTime_ = 0L;

        relativeDeadline_ = 0L;

        absoluteDeadline_ = 0L;

        port_ = 0L;

        inputSize_ = 0L;

        injectTaskLib_ = false;

        if (resourceRequestBuilder_ == null) {
          resourceRequest_ = null;
        } else {
          resourceRequest_ = null;
          resourceRequestBuilder_ = null;
        }
        priority_ = 0;

        taskType_ = 0;

        if (finalReportBuilder_ == null) {
          finalReport_ = null;
        } else {
          finalReport_ = null;
          finalReportBuilder_ = null;
        }
        traceJobId_ = 0L;

        traceTaskId_ = 0L;

        if (labelsBuilder_ == null) {
          labels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x80000000);
        } else {
          labelsBuilder_.clear();
        }
        if (labelSelectorsBuilder_ == null) {
          labelSelectors_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000001);
        } else {
          labelSelectorsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return firmament.TaskDesc.internal_static_firmament_TaskDescriptor_descriptor;
      }

      public firmament.TaskDesc.TaskDescriptor getDefaultInstanceForType() {
        return firmament.TaskDesc.TaskDescriptor.getDefaultInstance();
      }

      public firmament.TaskDesc.TaskDescriptor build() {
        firmament.TaskDesc.TaskDescriptor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public firmament.TaskDesc.TaskDescriptor buildPartial() {
        firmament.TaskDesc.TaskDescriptor result = new firmament.TaskDesc.TaskDescriptor(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        result.uid_ = uid_;
        result.name_ = name_;
        result.state_ = state_;
        result.jobId_ = jobId_;
        result.index_ = index_;
        if (dependenciesBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            dependencies_ = java.util.Collections.unmodifiableList(dependencies_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.dependencies_ = dependencies_;
        } else {
          result.dependencies_ = dependenciesBuilder_.build();
        }
        if (outputsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            outputs_ = java.util.Collections.unmodifiableList(outputs_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.outputs_ = outputs_;
        } else {
          result.outputs_ = outputsBuilder_.build();
        }
        result.binary_ = binary_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          args_ = args_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.args_ = args_;
        if (spawnedBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            spawned_ = java.util.Collections.unmodifiableList(spawned_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.spawned_ = spawned_;
        } else {
          result.spawned_ = spawnedBuilder_.build();
        }
        result.scheduledToResource_ = scheduledToResource_;
        result.lastHeartbeatLocation_ = lastHeartbeatLocation_;
        result.lastHeartbeatTime_ = lastHeartbeatTime_;
        result.delegatedTo_ = delegatedTo_;
        result.delegatedFrom_ = delegatedFrom_;
        result.submitTime_ = submitTime_;
        result.startTime_ = startTime_;
        result.finishTime_ = finishTime_;
        result.totalUnscheduledTime_ = totalUnscheduledTime_;
        result.totalRunTime_ = totalRunTime_;
        result.relativeDeadline_ = relativeDeadline_;
        result.absoluteDeadline_ = absoluteDeadline_;
        result.port_ = port_;
        result.inputSize_ = inputSize_;
        result.injectTaskLib_ = injectTaskLib_;
        if (resourceRequestBuilder_ == null) {
          result.resourceRequest_ = resourceRequest_;
        } else {
          result.resourceRequest_ = resourceRequestBuilder_.build();
        }
        result.priority_ = priority_;
        result.taskType_ = taskType_;
        if (finalReportBuilder_ == null) {
          result.finalReport_ = finalReport_;
        } else {
          result.finalReport_ = finalReportBuilder_.build();
        }
        result.traceJobId_ = traceJobId_;
        result.traceTaskId_ = traceTaskId_;
        if (labelsBuilder_ == null) {
          if (((bitField0_ & 0x80000000) == 0x80000000)) {
            labels_ = java.util.Collections.unmodifiableList(labels_);
            bitField0_ = (bitField0_ & ~0x80000000);
          }
          result.labels_ = labels_;
        } else {
          result.labels_ = labelsBuilder_.build();
        }
        if (labelSelectorsBuilder_ == null) {
          if (((bitField1_ & 0x00000001) == 0x00000001)) {
            labelSelectors_ = java.util.Collections.unmodifiableList(labelSelectors_);
            bitField1_ = (bitField1_ & ~0x00000001);
          }
          result.labelSelectors_ = labelSelectors_;
        } else {
          result.labelSelectors_ = labelSelectorsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof firmament.TaskDesc.TaskDescriptor) {
          return mergeFrom((firmament.TaskDesc.TaskDescriptor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(firmament.TaskDesc.TaskDescriptor other) {
        if (other == firmament.TaskDesc.TaskDescriptor.getDefaultInstance()) return this;
        if (other.getUid() != 0L) {
          setUid(other.getUid());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.state_ != 0) {
          setStateValue(other.getStateValue());
        }
        if (!other.getJobId().isEmpty()) {
          jobId_ = other.jobId_;
          onChanged();
        }
        if (other.getIndex() != 0L) {
          setIndex(other.getIndex());
        }
        if (dependenciesBuilder_ == null) {
          if (!other.dependencies_.isEmpty()) {
            if (dependencies_.isEmpty()) {
              dependencies_ = other.dependencies_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureDependenciesIsMutable();
              dependencies_.addAll(other.dependencies_);
            }
            onChanged();
          }
        } else {
          if (!other.dependencies_.isEmpty()) {
            if (dependenciesBuilder_.isEmpty()) {
              dependenciesBuilder_.dispose();
              dependenciesBuilder_ = null;
              dependencies_ = other.dependencies_;
              bitField0_ = (bitField0_ & ~0x00000020);
              dependenciesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDependenciesFieldBuilder() : null;
            } else {
              dependenciesBuilder_.addAllMessages(other.dependencies_);
            }
          }
        }
        if (outputsBuilder_ == null) {
          if (!other.outputs_.isEmpty()) {
            if (outputs_.isEmpty()) {
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureOutputsIsMutable();
              outputs_.addAll(other.outputs_);
            }
            onChanged();
          }
        } else {
          if (!other.outputs_.isEmpty()) {
            if (outputsBuilder_.isEmpty()) {
              outputsBuilder_.dispose();
              outputsBuilder_ = null;
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000040);
              outputsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOutputsFieldBuilder() : null;
            } else {
              outputsBuilder_.addAllMessages(other.outputs_);
            }
          }
        }
        if (!other.getBinary().isEmpty()) {
          binary_ = other.binary_;
          onChanged();
        }
        if (!other.args_.isEmpty()) {
          if (args_.isEmpty()) {
            args_ = other.args_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureArgsIsMutable();
            args_.addAll(other.args_);
          }
          onChanged();
        }
        if (spawnedBuilder_ == null) {
          if (!other.spawned_.isEmpty()) {
            if (spawned_.isEmpty()) {
              spawned_ = other.spawned_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureSpawnedIsMutable();
              spawned_.addAll(other.spawned_);
            }
            onChanged();
          }
        } else {
          if (!other.spawned_.isEmpty()) {
            if (spawnedBuilder_.isEmpty()) {
              spawnedBuilder_.dispose();
              spawnedBuilder_ = null;
              spawned_ = other.spawned_;
              bitField0_ = (bitField0_ & ~0x00000200);
              spawnedBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSpawnedFieldBuilder() : null;
            } else {
              spawnedBuilder_.addAllMessages(other.spawned_);
            }
          }
        }
        if (!other.getScheduledToResource().isEmpty()) {
          scheduledToResource_ = other.scheduledToResource_;
          onChanged();
        }
        if (!other.getLastHeartbeatLocation().isEmpty()) {
          lastHeartbeatLocation_ = other.lastHeartbeatLocation_;
          onChanged();
        }
        if (other.getLastHeartbeatTime() != 0L) {
          setLastHeartbeatTime(other.getLastHeartbeatTime());
        }
        if (!other.getDelegatedTo().isEmpty()) {
          delegatedTo_ = other.delegatedTo_;
          onChanged();
        }
        if (!other.getDelegatedFrom().isEmpty()) {
          delegatedFrom_ = other.delegatedFrom_;
          onChanged();
        }
        if (other.getSubmitTime() != 0L) {
          setSubmitTime(other.getSubmitTime());
        }
        if (other.getStartTime() != 0L) {
          setStartTime(other.getStartTime());
        }
        if (other.getFinishTime() != 0L) {
          setFinishTime(other.getFinishTime());
        }
        if (other.getTotalUnscheduledTime() != 0L) {
          setTotalUnscheduledTime(other.getTotalUnscheduledTime());
        }
        if (other.getTotalRunTime() != 0L) {
          setTotalRunTime(other.getTotalRunTime());
        }
        if (other.getRelativeDeadline() != 0L) {
          setRelativeDeadline(other.getRelativeDeadline());
        }
        if (other.getAbsoluteDeadline() != 0L) {
          setAbsoluteDeadline(other.getAbsoluteDeadline());
        }
        if (other.getPort() != 0L) {
          setPort(other.getPort());
        }
        if (other.getInputSize() != 0L) {
          setInputSize(other.getInputSize());
        }
        if (other.getInjectTaskLib() != false) {
          setInjectTaskLib(other.getInjectTaskLib());
        }
        if (other.hasResourceRequest()) {
          mergeResourceRequest(other.getResourceRequest());
        }
        if (other.getPriority() != 0) {
          setPriority(other.getPriority());
        }
        if (other.taskType_ != 0) {
          setTaskTypeValue(other.getTaskTypeValue());
        }
        if (other.hasFinalReport()) {
          mergeFinalReport(other.getFinalReport());
        }
        if (other.getTraceJobId() != 0L) {
          setTraceJobId(other.getTraceJobId());
        }
        if (other.getTraceTaskId() != 0L) {
          setTraceTaskId(other.getTraceTaskId());
        }
        if (labelsBuilder_ == null) {
          if (!other.labels_.isEmpty()) {
            if (labels_.isEmpty()) {
              labels_ = other.labels_;
              bitField0_ = (bitField0_ & ~0x80000000);
            } else {
              ensureLabelsIsMutable();
              labels_.addAll(other.labels_);
            }
            onChanged();
          }
        } else {
          if (!other.labels_.isEmpty()) {
            if (labelsBuilder_.isEmpty()) {
              labelsBuilder_.dispose();
              labelsBuilder_ = null;
              labels_ = other.labels_;
              bitField0_ = (bitField0_ & ~0x80000000);
              labelsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLabelsFieldBuilder() : null;
            } else {
              labelsBuilder_.addAllMessages(other.labels_);
            }
          }
        }
        if (labelSelectorsBuilder_ == null) {
          if (!other.labelSelectors_.isEmpty()) {
            if (labelSelectors_.isEmpty()) {
              labelSelectors_ = other.labelSelectors_;
              bitField1_ = (bitField1_ & ~0x00000001);
            } else {
              ensureLabelSelectorsIsMutable();
              labelSelectors_.addAll(other.labelSelectors_);
            }
            onChanged();
          }
        } else {
          if (!other.labelSelectors_.isEmpty()) {
            if (labelSelectorsBuilder_.isEmpty()) {
              labelSelectorsBuilder_.dispose();
              labelSelectorsBuilder_ = null;
              labelSelectors_ = other.labelSelectors_;
              bitField1_ = (bitField1_ & ~0x00000001);
              labelSelectorsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLabelSelectorsFieldBuilder() : null;
            } else {
              labelSelectorsBuilder_.addAllMessages(other.labelSelectors_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        firmament.TaskDesc.TaskDescriptor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (firmament.TaskDesc.TaskDescriptor) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private long uid_ ;
      /**
       * <code>optional uint64 uid = 1;</code>
       */
      public long getUid() {
        return uid_;
      }
      /**
       * <code>optional uint64 uid = 1;</code>
       */
      public Builder setUid(long value) {
        
        uid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 uid = 1;</code>
       */
      public Builder clearUid() {
        
        uid_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int state_ = 0;
      /**
       * <code>optional .firmament.TaskDescriptor.TaskState state = 3;</code>
       */
      public int getStateValue() {
        return state_;
      }
      /**
       * <code>optional .firmament.TaskDescriptor.TaskState state = 3;</code>
       */
      public Builder setStateValue(int value) {
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .firmament.TaskDescriptor.TaskState state = 3;</code>
       */
      public firmament.TaskDesc.TaskDescriptor.TaskState getState() {
        firmament.TaskDesc.TaskDescriptor.TaskState result = firmament.TaskDesc.TaskDescriptor.TaskState.valueOf(state_);
        return result == null ? firmament.TaskDesc.TaskDescriptor.TaskState.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .firmament.TaskDescriptor.TaskState state = 3;</code>
       */
      public Builder setState(firmament.TaskDesc.TaskDescriptor.TaskState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        state_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .firmament.TaskDescriptor.TaskState state = 3;</code>
       */
      public Builder clearState() {
        
        state_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object jobId_ = "";
      /**
       * <code>optional string job_id = 4;</code>
       */
      public java.lang.String getJobId() {
        java.lang.Object ref = jobId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          jobId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string job_id = 4;</code>
       */
      public com.google.protobuf.ByteString
          getJobIdBytes() {
        java.lang.Object ref = jobId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          jobId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string job_id = 4;</code>
       */
      public Builder setJobId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        jobId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string job_id = 4;</code>
       */
      public Builder clearJobId() {
        
        jobId_ = getDefaultInstance().getJobId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string job_id = 4;</code>
       */
      public Builder setJobIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        jobId_ = value;
        onChanged();
        return this;
      }

      private long index_ ;
      /**
       * <code>optional uint64 index = 5;</code>
       */
      public long getIndex() {
        return index_;
      }
      /**
       * <code>optional uint64 index = 5;</code>
       */
      public Builder setIndex(long value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 index = 5;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<firmament.ReferenceDesc.ReferenceDescriptor> dependencies_ =
        java.util.Collections.emptyList();
      private void ensureDependenciesIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          dependencies_ = new java.util.ArrayList<firmament.ReferenceDesc.ReferenceDescriptor>(dependencies_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          firmament.ReferenceDesc.ReferenceDescriptor, firmament.ReferenceDesc.ReferenceDescriptor.Builder, firmament.ReferenceDesc.ReferenceDescriptorOrBuilder> dependenciesBuilder_;

      /**
       * <pre>
       * Inputs/outputs 
       * </pre>
       *
       * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
       */
      public java.util.List<firmament.ReferenceDesc.ReferenceDescriptor> getDependenciesList() {
        if (dependenciesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dependencies_);
        } else {
          return dependenciesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Inputs/outputs 
       * </pre>
       *
       * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
       */
      public int getDependenciesCount() {
        if (dependenciesBuilder_ == null) {
          return dependencies_.size();
        } else {
          return dependenciesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Inputs/outputs 
       * </pre>
       *
       * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
       */
      public firmament.ReferenceDesc.ReferenceDescriptor getDependencies(int index) {
        if (dependenciesBuilder_ == null) {
          return dependencies_.get(index);
        } else {
          return dependenciesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Inputs/outputs 
       * </pre>
       *
       * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
       */
      public Builder setDependencies(
          int index, firmament.ReferenceDesc.ReferenceDescriptor value) {
        if (dependenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDependenciesIsMutable();
          dependencies_.set(index, value);
          onChanged();
        } else {
          dependenciesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Inputs/outputs 
       * </pre>
       *
       * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
       */
      public Builder setDependencies(
          int index, firmament.ReferenceDesc.ReferenceDescriptor.Builder builderForValue) {
        if (dependenciesBuilder_ == null) {
          ensureDependenciesIsMutable();
          dependencies_.set(index, builderForValue.build());
          onChanged();
        } else {
          dependenciesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Inputs/outputs 
       * </pre>
       *
       * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
       */
      public Builder addDependencies(firmament.ReferenceDesc.ReferenceDescriptor value) {
        if (dependenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDependenciesIsMutable();
          dependencies_.add(value);
          onChanged();
        } else {
          dependenciesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Inputs/outputs 
       * </pre>
       *
       * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
       */
      public Builder addDependencies(
          int index, firmament.ReferenceDesc.ReferenceDescriptor value) {
        if (dependenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDependenciesIsMutable();
          dependencies_.add(index, value);
          onChanged();
        } else {
          dependenciesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Inputs/outputs 
       * </pre>
       *
       * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
       */
      public Builder addDependencies(
          firmament.ReferenceDesc.ReferenceDescriptor.Builder builderForValue) {
        if (dependenciesBuilder_ == null) {
          ensureDependenciesIsMutable();
          dependencies_.add(builderForValue.build());
          onChanged();
        } else {
          dependenciesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Inputs/outputs 
       * </pre>
       *
       * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
       */
      public Builder addDependencies(
          int index, firmament.ReferenceDesc.ReferenceDescriptor.Builder builderForValue) {
        if (dependenciesBuilder_ == null) {
          ensureDependenciesIsMutable();
          dependencies_.add(index, builderForValue.build());
          onChanged();
        } else {
          dependenciesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Inputs/outputs 
       * </pre>
       *
       * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
       */
      public Builder addAllDependencies(
          java.lang.Iterable<? extends firmament.ReferenceDesc.ReferenceDescriptor> values) {
        if (dependenciesBuilder_ == null) {
          ensureDependenciesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dependencies_);
          onChanged();
        } else {
          dependenciesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Inputs/outputs 
       * </pre>
       *
       * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
       */
      public Builder clearDependencies() {
        if (dependenciesBuilder_ == null) {
          dependencies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          dependenciesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Inputs/outputs 
       * </pre>
       *
       * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
       */
      public Builder removeDependencies(int index) {
        if (dependenciesBuilder_ == null) {
          ensureDependenciesIsMutable();
          dependencies_.remove(index);
          onChanged();
        } else {
          dependenciesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Inputs/outputs 
       * </pre>
       *
       * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
       */
      public firmament.ReferenceDesc.ReferenceDescriptor.Builder getDependenciesBuilder(
          int index) {
        return getDependenciesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Inputs/outputs 
       * </pre>
       *
       * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
       */
      public firmament.ReferenceDesc.ReferenceDescriptorOrBuilder getDependenciesOrBuilder(
          int index) {
        if (dependenciesBuilder_ == null) {
          return dependencies_.get(index);  } else {
          return dependenciesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Inputs/outputs 
       * </pre>
       *
       * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
       */
      public java.util.List<? extends firmament.ReferenceDesc.ReferenceDescriptorOrBuilder> 
           getDependenciesOrBuilderList() {
        if (dependenciesBuilder_ != null) {
          return dependenciesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dependencies_);
        }
      }
      /**
       * <pre>
       * Inputs/outputs 
       * </pre>
       *
       * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
       */
      public firmament.ReferenceDesc.ReferenceDescriptor.Builder addDependenciesBuilder() {
        return getDependenciesFieldBuilder().addBuilder(
            firmament.ReferenceDesc.ReferenceDescriptor.getDefaultInstance());
      }
      /**
       * <pre>
       * Inputs/outputs 
       * </pre>
       *
       * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
       */
      public firmament.ReferenceDesc.ReferenceDescriptor.Builder addDependenciesBuilder(
          int index) {
        return getDependenciesFieldBuilder().addBuilder(
            index, firmament.ReferenceDesc.ReferenceDescriptor.getDefaultInstance());
      }
      /**
       * <pre>
       * Inputs/outputs 
       * </pre>
       *
       * <code>repeated .firmament.ReferenceDescriptor dependencies = 6;</code>
       */
      public java.util.List<firmament.ReferenceDesc.ReferenceDescriptor.Builder> 
           getDependenciesBuilderList() {
        return getDependenciesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          firmament.ReferenceDesc.ReferenceDescriptor, firmament.ReferenceDesc.ReferenceDescriptor.Builder, firmament.ReferenceDesc.ReferenceDescriptorOrBuilder> 
          getDependenciesFieldBuilder() {
        if (dependenciesBuilder_ == null) {
          dependenciesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              firmament.ReferenceDesc.ReferenceDescriptor, firmament.ReferenceDesc.ReferenceDescriptor.Builder, firmament.ReferenceDesc.ReferenceDescriptorOrBuilder>(
                  dependencies_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          dependencies_ = null;
        }
        return dependenciesBuilder_;
      }

      private java.util.List<firmament.ReferenceDesc.ReferenceDescriptor> outputs_ =
        java.util.Collections.emptyList();
      private void ensureOutputsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          outputs_ = new java.util.ArrayList<firmament.ReferenceDesc.ReferenceDescriptor>(outputs_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          firmament.ReferenceDesc.ReferenceDescriptor, firmament.ReferenceDesc.ReferenceDescriptor.Builder, firmament.ReferenceDesc.ReferenceDescriptorOrBuilder> outputsBuilder_;

      /**
       * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
       */
      public java.util.List<firmament.ReferenceDesc.ReferenceDescriptor> getOutputsList() {
        if (outputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outputs_);
        } else {
          return outputsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
       */
      public int getOutputsCount() {
        if (outputsBuilder_ == null) {
          return outputs_.size();
        } else {
          return outputsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
       */
      public firmament.ReferenceDesc.ReferenceDescriptor getOutputs(int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);
        } else {
          return outputsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
       */
      public Builder setOutputs(
          int index, firmament.ReferenceDesc.ReferenceDescriptor value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.set(index, value);
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
       */
      public Builder setOutputs(
          int index, firmament.ReferenceDesc.ReferenceDescriptor.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
       */
      public Builder addOutputs(firmament.ReferenceDesc.ReferenceDescriptor value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
       */
      public Builder addOutputs(
          int index, firmament.ReferenceDesc.ReferenceDescriptor value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(index, value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
       */
      public Builder addOutputs(
          firmament.ReferenceDesc.ReferenceDescriptor.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
       */
      public Builder addOutputs(
          int index, firmament.ReferenceDesc.ReferenceDescriptor.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
       */
      public Builder addAllOutputs(
          java.lang.Iterable<? extends firmament.ReferenceDesc.ReferenceDescriptor> values) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, outputs_);
          onChanged();
        } else {
          outputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
       */
      public Builder clearOutputs() {
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          outputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
       */
      public Builder removeOutputs(int index) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.remove(index);
          onChanged();
        } else {
          outputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
       */
      public firmament.ReferenceDesc.ReferenceDescriptor.Builder getOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
       */
      public firmament.ReferenceDesc.ReferenceDescriptorOrBuilder getOutputsOrBuilder(
          int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);  } else {
          return outputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
       */
      public java.util.List<? extends firmament.ReferenceDesc.ReferenceDescriptorOrBuilder> 
           getOutputsOrBuilderList() {
        if (outputsBuilder_ != null) {
          return outputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outputs_);
        }
      }
      /**
       * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
       */
      public firmament.ReferenceDesc.ReferenceDescriptor.Builder addOutputsBuilder() {
        return getOutputsFieldBuilder().addBuilder(
            firmament.ReferenceDesc.ReferenceDescriptor.getDefaultInstance());
      }
      /**
       * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
       */
      public firmament.ReferenceDesc.ReferenceDescriptor.Builder addOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().addBuilder(
            index, firmament.ReferenceDesc.ReferenceDescriptor.getDefaultInstance());
      }
      /**
       * <code>repeated .firmament.ReferenceDescriptor outputs = 7;</code>
       */
      public java.util.List<firmament.ReferenceDesc.ReferenceDescriptor.Builder> 
           getOutputsBuilderList() {
        return getOutputsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          firmament.ReferenceDesc.ReferenceDescriptor, firmament.ReferenceDesc.ReferenceDescriptor.Builder, firmament.ReferenceDesc.ReferenceDescriptorOrBuilder> 
          getOutputsFieldBuilder() {
        if (outputsBuilder_ == null) {
          outputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              firmament.ReferenceDesc.ReferenceDescriptor, firmament.ReferenceDesc.ReferenceDescriptor.Builder, firmament.ReferenceDesc.ReferenceDescriptorOrBuilder>(
                  outputs_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          outputs_ = null;
        }
        return outputsBuilder_;
      }

      private java.lang.Object binary_ = "";
      /**
       * <pre>
       * Command and arguments 
       * </pre>
       *
       * <code>optional string binary = 8;</code>
       */
      public java.lang.String getBinary() {
        java.lang.Object ref = binary_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          binary_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Command and arguments 
       * </pre>
       *
       * <code>optional string binary = 8;</code>
       */
      public com.google.protobuf.ByteString
          getBinaryBytes() {
        java.lang.Object ref = binary_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          binary_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Command and arguments 
       * </pre>
       *
       * <code>optional string binary = 8;</code>
       */
      public Builder setBinary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        binary_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Command and arguments 
       * </pre>
       *
       * <code>optional string binary = 8;</code>
       */
      public Builder clearBinary() {
        
        binary_ = getDefaultInstance().getBinary();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Command and arguments 
       * </pre>
       *
       * <code>optional string binary = 8;</code>
       */
      public Builder setBinaryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        binary_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList args_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureArgsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          args_ = new com.google.protobuf.LazyStringArrayList(args_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated string args = 9;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getArgsList() {
        return args_.getUnmodifiableView();
      }
      /**
       * <code>repeated string args = 9;</code>
       */
      public int getArgsCount() {
        return args_.size();
      }
      /**
       * <code>repeated string args = 9;</code>
       */
      public java.lang.String getArgs(int index) {
        return args_.get(index);
      }
      /**
       * <code>repeated string args = 9;</code>
       */
      public com.google.protobuf.ByteString
          getArgsBytes(int index) {
        return args_.getByteString(index);
      }
      /**
       * <code>repeated string args = 9;</code>
       */
      public Builder setArgs(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureArgsIsMutable();
        args_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string args = 9;</code>
       */
      public Builder addArgs(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureArgsIsMutable();
        args_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string args = 9;</code>
       */
      public Builder addAllArgs(
          java.lang.Iterable<java.lang.String> values) {
        ensureArgsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, args_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string args = 9;</code>
       */
      public Builder clearArgs() {
        args_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string args = 9;</code>
       */
      public Builder addArgsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureArgsIsMutable();
        args_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<firmament.TaskDesc.TaskDescriptor> spawned_ =
        java.util.Collections.emptyList();
      private void ensureSpawnedIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          spawned_ = new java.util.ArrayList<firmament.TaskDesc.TaskDescriptor>(spawned_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          firmament.TaskDesc.TaskDescriptor, firmament.TaskDesc.TaskDescriptor.Builder, firmament.TaskDesc.TaskDescriptorOrBuilder> spawnedBuilder_;

      /**
       * <pre>
       * Children 
       * </pre>
       *
       * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
       */
      public java.util.List<firmament.TaskDesc.TaskDescriptor> getSpawnedList() {
        if (spawnedBuilder_ == null) {
          return java.util.Collections.unmodifiableList(spawned_);
        } else {
          return spawnedBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Children 
       * </pre>
       *
       * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
       */
      public int getSpawnedCount() {
        if (spawnedBuilder_ == null) {
          return spawned_.size();
        } else {
          return spawnedBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Children 
       * </pre>
       *
       * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
       */
      public firmament.TaskDesc.TaskDescriptor getSpawned(int index) {
        if (spawnedBuilder_ == null) {
          return spawned_.get(index);
        } else {
          return spawnedBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Children 
       * </pre>
       *
       * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
       */
      public Builder setSpawned(
          int index, firmament.TaskDesc.TaskDescriptor value) {
        if (spawnedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpawnedIsMutable();
          spawned_.set(index, value);
          onChanged();
        } else {
          spawnedBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Children 
       * </pre>
       *
       * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
       */
      public Builder setSpawned(
          int index, firmament.TaskDesc.TaskDescriptor.Builder builderForValue) {
        if (spawnedBuilder_ == null) {
          ensureSpawnedIsMutable();
          spawned_.set(index, builderForValue.build());
          onChanged();
        } else {
          spawnedBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Children 
       * </pre>
       *
       * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
       */
      public Builder addSpawned(firmament.TaskDesc.TaskDescriptor value) {
        if (spawnedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpawnedIsMutable();
          spawned_.add(value);
          onChanged();
        } else {
          spawnedBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Children 
       * </pre>
       *
       * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
       */
      public Builder addSpawned(
          int index, firmament.TaskDesc.TaskDescriptor value) {
        if (spawnedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpawnedIsMutable();
          spawned_.add(index, value);
          onChanged();
        } else {
          spawnedBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Children 
       * </pre>
       *
       * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
       */
      public Builder addSpawned(
          firmament.TaskDesc.TaskDescriptor.Builder builderForValue) {
        if (spawnedBuilder_ == null) {
          ensureSpawnedIsMutable();
          spawned_.add(builderForValue.build());
          onChanged();
        } else {
          spawnedBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Children 
       * </pre>
       *
       * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
       */
      public Builder addSpawned(
          int index, firmament.TaskDesc.TaskDescriptor.Builder builderForValue) {
        if (spawnedBuilder_ == null) {
          ensureSpawnedIsMutable();
          spawned_.add(index, builderForValue.build());
          onChanged();
        } else {
          spawnedBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Children 
       * </pre>
       *
       * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
       */
      public Builder addAllSpawned(
          java.lang.Iterable<? extends firmament.TaskDesc.TaskDescriptor> values) {
        if (spawnedBuilder_ == null) {
          ensureSpawnedIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, spawned_);
          onChanged();
        } else {
          spawnedBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Children 
       * </pre>
       *
       * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
       */
      public Builder clearSpawned() {
        if (spawnedBuilder_ == null) {
          spawned_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          spawnedBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Children 
       * </pre>
       *
       * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
       */
      public Builder removeSpawned(int index) {
        if (spawnedBuilder_ == null) {
          ensureSpawnedIsMutable();
          spawned_.remove(index);
          onChanged();
        } else {
          spawnedBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Children 
       * </pre>
       *
       * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
       */
      public firmament.TaskDesc.TaskDescriptor.Builder getSpawnedBuilder(
          int index) {
        return getSpawnedFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Children 
       * </pre>
       *
       * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
       */
      public firmament.TaskDesc.TaskDescriptorOrBuilder getSpawnedOrBuilder(
          int index) {
        if (spawnedBuilder_ == null) {
          return spawned_.get(index);  } else {
          return spawnedBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Children 
       * </pre>
       *
       * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
       */
      public java.util.List<? extends firmament.TaskDesc.TaskDescriptorOrBuilder> 
           getSpawnedOrBuilderList() {
        if (spawnedBuilder_ != null) {
          return spawnedBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(spawned_);
        }
      }
      /**
       * <pre>
       * Children 
       * </pre>
       *
       * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
       */
      public firmament.TaskDesc.TaskDescriptor.Builder addSpawnedBuilder() {
        return getSpawnedFieldBuilder().addBuilder(
            firmament.TaskDesc.TaskDescriptor.getDefaultInstance());
      }
      /**
       * <pre>
       * Children 
       * </pre>
       *
       * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
       */
      public firmament.TaskDesc.TaskDescriptor.Builder addSpawnedBuilder(
          int index) {
        return getSpawnedFieldBuilder().addBuilder(
            index, firmament.TaskDesc.TaskDescriptor.getDefaultInstance());
      }
      /**
       * <pre>
       * Children 
       * </pre>
       *
       * <code>repeated .firmament.TaskDescriptor spawned = 10;</code>
       */
      public java.util.List<firmament.TaskDesc.TaskDescriptor.Builder> 
           getSpawnedBuilderList() {
        return getSpawnedFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          firmament.TaskDesc.TaskDescriptor, firmament.TaskDesc.TaskDescriptor.Builder, firmament.TaskDesc.TaskDescriptorOrBuilder> 
          getSpawnedFieldBuilder() {
        if (spawnedBuilder_ == null) {
          spawnedBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              firmament.TaskDesc.TaskDescriptor, firmament.TaskDesc.TaskDescriptor.Builder, firmament.TaskDesc.TaskDescriptorOrBuilder>(
                  spawned_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          spawned_ = null;
        }
        return spawnedBuilder_;
      }

      private java.lang.Object scheduledToResource_ = "";
      /**
       * <pre>
       * Runtime meta-data 
       * </pre>
       *
       * <code>optional string scheduled_to_resource = 11;</code>
       */
      public java.lang.String getScheduledToResource() {
        java.lang.Object ref = scheduledToResource_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          scheduledToResource_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Runtime meta-data 
       * </pre>
       *
       * <code>optional string scheduled_to_resource = 11;</code>
       */
      public com.google.protobuf.ByteString
          getScheduledToResourceBytes() {
        java.lang.Object ref = scheduledToResource_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          scheduledToResource_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Runtime meta-data 
       * </pre>
       *
       * <code>optional string scheduled_to_resource = 11;</code>
       */
      public Builder setScheduledToResource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        scheduledToResource_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Runtime meta-data 
       * </pre>
       *
       * <code>optional string scheduled_to_resource = 11;</code>
       */
      public Builder clearScheduledToResource() {
        
        scheduledToResource_ = getDefaultInstance().getScheduledToResource();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Runtime meta-data 
       * </pre>
       *
       * <code>optional string scheduled_to_resource = 11;</code>
       */
      public Builder setScheduledToResourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        scheduledToResource_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastHeartbeatLocation_ = "";
      /**
       * <code>optional string last_heartbeat_location = 12;</code>
       */
      public java.lang.String getLastHeartbeatLocation() {
        java.lang.Object ref = lastHeartbeatLocation_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastHeartbeatLocation_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string last_heartbeat_location = 12;</code>
       */
      public com.google.protobuf.ByteString
          getLastHeartbeatLocationBytes() {
        java.lang.Object ref = lastHeartbeatLocation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastHeartbeatLocation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string last_heartbeat_location = 12;</code>
       */
      public Builder setLastHeartbeatLocation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lastHeartbeatLocation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string last_heartbeat_location = 12;</code>
       */
      public Builder clearLastHeartbeatLocation() {
        
        lastHeartbeatLocation_ = getDefaultInstance().getLastHeartbeatLocation();
        onChanged();
        return this;
      }
      /**
       * <code>optional string last_heartbeat_location = 12;</code>
       */
      public Builder setLastHeartbeatLocationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lastHeartbeatLocation_ = value;
        onChanged();
        return this;
      }

      private long lastHeartbeatTime_ ;
      /**
       * <code>optional uint64 last_heartbeat_time = 13;</code>
       */
      public long getLastHeartbeatTime() {
        return lastHeartbeatTime_;
      }
      /**
       * <code>optional uint64 last_heartbeat_time = 13;</code>
       */
      public Builder setLastHeartbeatTime(long value) {
        
        lastHeartbeatTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 last_heartbeat_time = 13;</code>
       */
      public Builder clearLastHeartbeatTime() {
        
        lastHeartbeatTime_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object delegatedTo_ = "";
      /**
       * <pre>
       * Delegation info 
       * </pre>
       *
       * <code>optional string delegated_to = 14;</code>
       */
      public java.lang.String getDelegatedTo() {
        java.lang.Object ref = delegatedTo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          delegatedTo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Delegation info 
       * </pre>
       *
       * <code>optional string delegated_to = 14;</code>
       */
      public com.google.protobuf.ByteString
          getDelegatedToBytes() {
        java.lang.Object ref = delegatedTo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          delegatedTo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Delegation info 
       * </pre>
       *
       * <code>optional string delegated_to = 14;</code>
       */
      public Builder setDelegatedTo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        delegatedTo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Delegation info 
       * </pre>
       *
       * <code>optional string delegated_to = 14;</code>
       */
      public Builder clearDelegatedTo() {
        
        delegatedTo_ = getDefaultInstance().getDelegatedTo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Delegation info 
       * </pre>
       *
       * <code>optional string delegated_to = 14;</code>
       */
      public Builder setDelegatedToBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        delegatedTo_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object delegatedFrom_ = "";
      /**
       * <code>optional string delegated_from = 15;</code>
       */
      public java.lang.String getDelegatedFrom() {
        java.lang.Object ref = delegatedFrom_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          delegatedFrom_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string delegated_from = 15;</code>
       */
      public com.google.protobuf.ByteString
          getDelegatedFromBytes() {
        java.lang.Object ref = delegatedFrom_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          delegatedFrom_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string delegated_from = 15;</code>
       */
      public Builder setDelegatedFrom(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        delegatedFrom_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string delegated_from = 15;</code>
       */
      public Builder clearDelegatedFrom() {
        
        delegatedFrom_ = getDefaultInstance().getDelegatedFrom();
        onChanged();
        return this;
      }
      /**
       * <code>optional string delegated_from = 15;</code>
       */
      public Builder setDelegatedFromBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        delegatedFrom_ = value;
        onChanged();
        return this;
      }

      private long submitTime_ ;
      /**
       * <pre>
       * Timestamps 
       * </pre>
       *
       * <code>optional uint64 submit_time = 16;</code>
       */
      public long getSubmitTime() {
        return submitTime_;
      }
      /**
       * <pre>
       * Timestamps 
       * </pre>
       *
       * <code>optional uint64 submit_time = 16;</code>
       */
      public Builder setSubmitTime(long value) {
        
        submitTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Timestamps 
       * </pre>
       *
       * <code>optional uint64 submit_time = 16;</code>
       */
      public Builder clearSubmitTime() {
        
        submitTime_ = 0L;
        onChanged();
        return this;
      }

      private long startTime_ ;
      /**
       * <code>optional uint64 start_time = 17;</code>
       */
      public long getStartTime() {
        return startTime_;
      }
      /**
       * <code>optional uint64 start_time = 17;</code>
       */
      public Builder setStartTime(long value) {
        
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 start_time = 17;</code>
       */
      public Builder clearStartTime() {
        
        startTime_ = 0L;
        onChanged();
        return this;
      }

      private long finishTime_ ;
      /**
       * <code>optional uint64 finish_time = 18;</code>
       */
      public long getFinishTime() {
        return finishTime_;
      }
      /**
       * <code>optional uint64 finish_time = 18;</code>
       */
      public Builder setFinishTime(long value) {
        
        finishTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 finish_time = 18;</code>
       */
      public Builder clearFinishTime() {
        
        finishTime_ = 0L;
        onChanged();
        return this;
      }

      private long totalUnscheduledTime_ ;
      /**
       * <pre>
       * The total time spent unscheduled before previous runs. 
       * </pre>
       *
       * <code>optional uint64 total_unscheduled_time = 19;</code>
       */
      public long getTotalUnscheduledTime() {
        return totalUnscheduledTime_;
      }
      /**
       * <pre>
       * The total time spent unscheduled before previous runs. 
       * </pre>
       *
       * <code>optional uint64 total_unscheduled_time = 19;</code>
       */
      public Builder setTotalUnscheduledTime(long value) {
        
        totalUnscheduledTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The total time spent unscheduled before previous runs. 
       * </pre>
       *
       * <code>optional uint64 total_unscheduled_time = 19;</code>
       */
      public Builder clearTotalUnscheduledTime() {
        
        totalUnscheduledTime_ = 0L;
        onChanged();
        return this;
      }

      private long totalRunTime_ ;
      /**
       * <pre>
       * The total time spent in previous runs. This field only gets updated when
       *the task finishes running. 
       * </pre>
       *
       * <code>optional uint64 total_run_time = 20;</code>
       */
      public long getTotalRunTime() {
        return totalRunTime_;
      }
      /**
       * <pre>
       * The total time spent in previous runs. This field only gets updated when
       *the task finishes running. 
       * </pre>
       *
       * <code>optional uint64 total_run_time = 20;</code>
       */
      public Builder setTotalRunTime(long value) {
        
        totalRunTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The total time spent in previous runs. This field only gets updated when
       *the task finishes running. 
       * </pre>
       *
       * <code>optional uint64 total_run_time = 20;</code>
       */
      public Builder clearTotalRunTime() {
        
        totalRunTime_ = 0L;
        onChanged();
        return this;
      }

      private long relativeDeadline_ ;
      /**
       * <pre>
       * Deadlines 
       * </pre>
       *
       * <code>optional uint64 relative_deadline = 21;</code>
       */
      public long getRelativeDeadline() {
        return relativeDeadline_;
      }
      /**
       * <pre>
       * Deadlines 
       * </pre>
       *
       * <code>optional uint64 relative_deadline = 21;</code>
       */
      public Builder setRelativeDeadline(long value) {
        
        relativeDeadline_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Deadlines 
       * </pre>
       *
       * <code>optional uint64 relative_deadline = 21;</code>
       */
      public Builder clearRelativeDeadline() {
        
        relativeDeadline_ = 0L;
        onChanged();
        return this;
      }

      private long absoluteDeadline_ ;
      /**
       * <pre>
       * Application-specific fields 
       * </pre>
       *
       * <code>optional uint64 absolute_deadline = 22;</code>
       */
      public long getAbsoluteDeadline() {
        return absoluteDeadline_;
      }
      /**
       * <pre>
       * Application-specific fields 
       * </pre>
       *
       * <code>optional uint64 absolute_deadline = 22;</code>
       */
      public Builder setAbsoluteDeadline(long value) {
        
        absoluteDeadline_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Application-specific fields 
       * </pre>
       *
       * <code>optional uint64 absolute_deadline = 22;</code>
       */
      public Builder clearAbsoluteDeadline() {
        
        absoluteDeadline_ = 0L;
        onChanged();
        return this;
      }

      private long port_ ;
      /**
       * <pre>
       * TODO(malte): move these to sub-messages 
       * </pre>
       *
       * <code>optional uint64 port = 23;</code>
       */
      public long getPort() {
        return port_;
      }
      /**
       * <pre>
       * TODO(malte): move these to sub-messages 
       * </pre>
       *
       * <code>optional uint64 port = 23;</code>
       */
      public Builder setPort(long value) {
        
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO(malte): move these to sub-messages 
       * </pre>
       *
       * <code>optional uint64 port = 23;</code>
       */
      public Builder clearPort() {
        
        port_ = 0L;
        onChanged();
        return this;
      }

      private long inputSize_ ;
      /**
       * <code>optional uint64 input_size = 24;</code>
       */
      public long getInputSize() {
        return inputSize_;
      }
      /**
       * <code>optional uint64 input_size = 24;</code>
       */
      public Builder setInputSize(long value) {
        
        inputSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 input_size = 24;</code>
       */
      public Builder clearInputSize() {
        
        inputSize_ = 0L;
        onChanged();
        return this;
      }

      private boolean injectTaskLib_ ;
      /**
       * <pre>
       * TaskLib related stuff 
       * </pre>
       *
       * <code>optional bool inject_task_lib = 25;</code>
       */
      public boolean getInjectTaskLib() {
        return injectTaskLib_;
      }
      /**
       * <pre>
       * TaskLib related stuff 
       * </pre>
       *
       * <code>optional bool inject_task_lib = 25;</code>
       */
      public Builder setInjectTaskLib(boolean value) {
        
        injectTaskLib_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TaskLib related stuff 
       * </pre>
       *
       * <code>optional bool inject_task_lib = 25;</code>
       */
      public Builder clearInjectTaskLib() {
        
        injectTaskLib_ = false;
        onChanged();
        return this;
      }

      private firmament.ResourceVectorOuterClass.ResourceVector resourceRequest_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          firmament.ResourceVectorOuterClass.ResourceVector, firmament.ResourceVectorOuterClass.ResourceVector.Builder, firmament.ResourceVectorOuterClass.ResourceVectorOrBuilder> resourceRequestBuilder_;
      /**
       * <pre>
       * Task resource request and priority 
       * </pre>
       *
       * <code>optional .firmament.ResourceVector resource_request = 26;</code>
       */
      public boolean hasResourceRequest() {
        return resourceRequestBuilder_ != null || resourceRequest_ != null;
      }
      /**
       * <pre>
       * Task resource request and priority 
       * </pre>
       *
       * <code>optional .firmament.ResourceVector resource_request = 26;</code>
       */
      public firmament.ResourceVectorOuterClass.ResourceVector getResourceRequest() {
        if (resourceRequestBuilder_ == null) {
          return resourceRequest_ == null ? firmament.ResourceVectorOuterClass.ResourceVector.getDefaultInstance() : resourceRequest_;
        } else {
          return resourceRequestBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Task resource request and priority 
       * </pre>
       *
       * <code>optional .firmament.ResourceVector resource_request = 26;</code>
       */
      public Builder setResourceRequest(firmament.ResourceVectorOuterClass.ResourceVector value) {
        if (resourceRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resourceRequest_ = value;
          onChanged();
        } else {
          resourceRequestBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Task resource request and priority 
       * </pre>
       *
       * <code>optional .firmament.ResourceVector resource_request = 26;</code>
       */
      public Builder setResourceRequest(
          firmament.ResourceVectorOuterClass.ResourceVector.Builder builderForValue) {
        if (resourceRequestBuilder_ == null) {
          resourceRequest_ = builderForValue.build();
          onChanged();
        } else {
          resourceRequestBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Task resource request and priority 
       * </pre>
       *
       * <code>optional .firmament.ResourceVector resource_request = 26;</code>
       */
      public Builder mergeResourceRequest(firmament.ResourceVectorOuterClass.ResourceVector value) {
        if (resourceRequestBuilder_ == null) {
          if (resourceRequest_ != null) {
            resourceRequest_ =
              firmament.ResourceVectorOuterClass.ResourceVector.newBuilder(resourceRequest_).mergeFrom(value).buildPartial();
          } else {
            resourceRequest_ = value;
          }
          onChanged();
        } else {
          resourceRequestBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Task resource request and priority 
       * </pre>
       *
       * <code>optional .firmament.ResourceVector resource_request = 26;</code>
       */
      public Builder clearResourceRequest() {
        if (resourceRequestBuilder_ == null) {
          resourceRequest_ = null;
          onChanged();
        } else {
          resourceRequest_ = null;
          resourceRequestBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Task resource request and priority 
       * </pre>
       *
       * <code>optional .firmament.ResourceVector resource_request = 26;</code>
       */
      public firmament.ResourceVectorOuterClass.ResourceVector.Builder getResourceRequestBuilder() {
        
        onChanged();
        return getResourceRequestFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Task resource request and priority 
       * </pre>
       *
       * <code>optional .firmament.ResourceVector resource_request = 26;</code>
       */
      public firmament.ResourceVectorOuterClass.ResourceVectorOrBuilder getResourceRequestOrBuilder() {
        if (resourceRequestBuilder_ != null) {
          return resourceRequestBuilder_.getMessageOrBuilder();
        } else {
          return resourceRequest_ == null ?
              firmament.ResourceVectorOuterClass.ResourceVector.getDefaultInstance() : resourceRequest_;
        }
      }
      /**
       * <pre>
       * Task resource request and priority 
       * </pre>
       *
       * <code>optional .firmament.ResourceVector resource_request = 26;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          firmament.ResourceVectorOuterClass.ResourceVector, firmament.ResourceVectorOuterClass.ResourceVector.Builder, firmament.ResourceVectorOuterClass.ResourceVectorOrBuilder> 
          getResourceRequestFieldBuilder() {
        if (resourceRequestBuilder_ == null) {
          resourceRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              firmament.ResourceVectorOuterClass.ResourceVector, firmament.ResourceVectorOuterClass.ResourceVector.Builder, firmament.ResourceVectorOuterClass.ResourceVectorOrBuilder>(
                  getResourceRequest(),
                  getParentForChildren(),
                  isClean());
          resourceRequest_ = null;
        }
        return resourceRequestBuilder_;
      }

      private int priority_ ;
      /**
       * <code>optional uint32 priority = 27;</code>
       */
      public int getPriority() {
        return priority_;
      }
      /**
       * <code>optional uint32 priority = 27;</code>
       */
      public Builder setPriority(int value) {
        
        priority_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 priority = 27;</code>
       */
      public Builder clearPriority() {
        
        priority_ = 0;
        onChanged();
        return this;
      }

      private int taskType_ = 0;
      /**
       * <pre>
       * TODO(malte): move this to a policy-specific sub-message 
       * </pre>
       *
       * <code>optional .firmament.TaskDescriptor.TaskType task_type = 28;</code>
       */
      public int getTaskTypeValue() {
        return taskType_;
      }
      /**
       * <pre>
       * TODO(malte): move this to a policy-specific sub-message 
       * </pre>
       *
       * <code>optional .firmament.TaskDescriptor.TaskType task_type = 28;</code>
       */
      public Builder setTaskTypeValue(int value) {
        taskType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO(malte): move this to a policy-specific sub-message 
       * </pre>
       *
       * <code>optional .firmament.TaskDescriptor.TaskType task_type = 28;</code>
       */
      public firmament.TaskDesc.TaskDescriptor.TaskType getTaskType() {
        firmament.TaskDesc.TaskDescriptor.TaskType result = firmament.TaskDesc.TaskDescriptor.TaskType.valueOf(taskType_);
        return result == null ? firmament.TaskDesc.TaskDescriptor.TaskType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * TODO(malte): move this to a policy-specific sub-message 
       * </pre>
       *
       * <code>optional .firmament.TaskDescriptor.TaskType task_type = 28;</code>
       */
      public Builder setTaskType(firmament.TaskDesc.TaskDescriptor.TaskType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        taskType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO(malte): move this to a policy-specific sub-message 
       * </pre>
       *
       * <code>optional .firmament.TaskDescriptor.TaskType task_type = 28;</code>
       */
      public Builder clearTaskType() {
        
        taskType_ = 0;
        onChanged();
        return this;
      }

      private firmament.TaskFinalReportOuterClass.TaskFinalReport finalReport_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          firmament.TaskFinalReportOuterClass.TaskFinalReport, firmament.TaskFinalReportOuterClass.TaskFinalReport.Builder, firmament.TaskFinalReportOuterClass.TaskFinalReportOrBuilder> finalReportBuilder_;
      /**
       * <pre>
       * Final report after successful execution 
       * </pre>
       *
       * <code>optional .firmament.TaskFinalReport final_report = 29;</code>
       */
      public boolean hasFinalReport() {
        return finalReportBuilder_ != null || finalReport_ != null;
      }
      /**
       * <pre>
       * Final report after successful execution 
       * </pre>
       *
       * <code>optional .firmament.TaskFinalReport final_report = 29;</code>
       */
      public firmament.TaskFinalReportOuterClass.TaskFinalReport getFinalReport() {
        if (finalReportBuilder_ == null) {
          return finalReport_ == null ? firmament.TaskFinalReportOuterClass.TaskFinalReport.getDefaultInstance() : finalReport_;
        } else {
          return finalReportBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Final report after successful execution 
       * </pre>
       *
       * <code>optional .firmament.TaskFinalReport final_report = 29;</code>
       */
      public Builder setFinalReport(firmament.TaskFinalReportOuterClass.TaskFinalReport value) {
        if (finalReportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          finalReport_ = value;
          onChanged();
        } else {
          finalReportBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Final report after successful execution 
       * </pre>
       *
       * <code>optional .firmament.TaskFinalReport final_report = 29;</code>
       */
      public Builder setFinalReport(
          firmament.TaskFinalReportOuterClass.TaskFinalReport.Builder builderForValue) {
        if (finalReportBuilder_ == null) {
          finalReport_ = builderForValue.build();
          onChanged();
        } else {
          finalReportBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Final report after successful execution 
       * </pre>
       *
       * <code>optional .firmament.TaskFinalReport final_report = 29;</code>
       */
      public Builder mergeFinalReport(firmament.TaskFinalReportOuterClass.TaskFinalReport value) {
        if (finalReportBuilder_ == null) {
          if (finalReport_ != null) {
            finalReport_ =
              firmament.TaskFinalReportOuterClass.TaskFinalReport.newBuilder(finalReport_).mergeFrom(value).buildPartial();
          } else {
            finalReport_ = value;
          }
          onChanged();
        } else {
          finalReportBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Final report after successful execution 
       * </pre>
       *
       * <code>optional .firmament.TaskFinalReport final_report = 29;</code>
       */
      public Builder clearFinalReport() {
        if (finalReportBuilder_ == null) {
          finalReport_ = null;
          onChanged();
        } else {
          finalReport_ = null;
          finalReportBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Final report after successful execution 
       * </pre>
       *
       * <code>optional .firmament.TaskFinalReport final_report = 29;</code>
       */
      public firmament.TaskFinalReportOuterClass.TaskFinalReport.Builder getFinalReportBuilder() {
        
        onChanged();
        return getFinalReportFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Final report after successful execution 
       * </pre>
       *
       * <code>optional .firmament.TaskFinalReport final_report = 29;</code>
       */
      public firmament.TaskFinalReportOuterClass.TaskFinalReportOrBuilder getFinalReportOrBuilder() {
        if (finalReportBuilder_ != null) {
          return finalReportBuilder_.getMessageOrBuilder();
        } else {
          return finalReport_ == null ?
              firmament.TaskFinalReportOuterClass.TaskFinalReport.getDefaultInstance() : finalReport_;
        }
      }
      /**
       * <pre>
       * Final report after successful execution 
       * </pre>
       *
       * <code>optional .firmament.TaskFinalReport final_report = 29;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          firmament.TaskFinalReportOuterClass.TaskFinalReport, firmament.TaskFinalReportOuterClass.TaskFinalReport.Builder, firmament.TaskFinalReportOuterClass.TaskFinalReportOrBuilder> 
          getFinalReportFieldBuilder() {
        if (finalReportBuilder_ == null) {
          finalReportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              firmament.TaskFinalReportOuterClass.TaskFinalReport, firmament.TaskFinalReportOuterClass.TaskFinalReport.Builder, firmament.TaskFinalReportOuterClass.TaskFinalReportOrBuilder>(
                  getFinalReport(),
                  getParentForChildren(),
                  isClean());
          finalReport_ = null;
        }
        return finalReportBuilder_;
      }

      private long traceJobId_ ;
      /**
       * <pre>
       * Simulation related fields
       * </pre>
       *
       * <code>optional uint64 trace_job_id = 30;</code>
       */
      public long getTraceJobId() {
        return traceJobId_;
      }
      /**
       * <pre>
       * Simulation related fields
       * </pre>
       *
       * <code>optional uint64 trace_job_id = 30;</code>
       */
      public Builder setTraceJobId(long value) {
        
        traceJobId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Simulation related fields
       * </pre>
       *
       * <code>optional uint64 trace_job_id = 30;</code>
       */
      public Builder clearTraceJobId() {
        
        traceJobId_ = 0L;
        onChanged();
        return this;
      }

      private long traceTaskId_ ;
      /**
       * <code>optional uint64 trace_task_id = 31;</code>
       */
      public long getTraceTaskId() {
        return traceTaskId_;
      }
      /**
       * <code>optional uint64 trace_task_id = 31;</code>
       */
      public Builder setTraceTaskId(long value) {
        
        traceTaskId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 trace_task_id = 31;</code>
       */
      public Builder clearTraceTaskId() {
        
        traceTaskId_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<firmament.LabelOuterClass.Label> labels_ =
        java.util.Collections.emptyList();
      private void ensureLabelsIsMutable() {
        if (!((bitField0_ & 0x80000000) == 0x80000000)) {
          labels_ = new java.util.ArrayList<firmament.LabelOuterClass.Label>(labels_);
          bitField0_ |= 0x80000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          firmament.LabelOuterClass.Label, firmament.LabelOuterClass.Label.Builder, firmament.LabelOuterClass.LabelOrBuilder> labelsBuilder_;

      /**
       * <pre>
       * Task labels 
       * </pre>
       *
       * <code>repeated .firmament.Label labels = 32;</code>
       */
      public java.util.List<firmament.LabelOuterClass.Label> getLabelsList() {
        if (labelsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(labels_);
        } else {
          return labelsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Task labels 
       * </pre>
       *
       * <code>repeated .firmament.Label labels = 32;</code>
       */
      public int getLabelsCount() {
        if (labelsBuilder_ == null) {
          return labels_.size();
        } else {
          return labelsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Task labels 
       * </pre>
       *
       * <code>repeated .firmament.Label labels = 32;</code>
       */
      public firmament.LabelOuterClass.Label getLabels(int index) {
        if (labelsBuilder_ == null) {
          return labels_.get(index);
        } else {
          return labelsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Task labels 
       * </pre>
       *
       * <code>repeated .firmament.Label labels = 32;</code>
       */
      public Builder setLabels(
          int index, firmament.LabelOuterClass.Label value) {
        if (labelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLabelsIsMutable();
          labels_.set(index, value);
          onChanged();
        } else {
          labelsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Task labels 
       * </pre>
       *
       * <code>repeated .firmament.Label labels = 32;</code>
       */
      public Builder setLabels(
          int index, firmament.LabelOuterClass.Label.Builder builderForValue) {
        if (labelsBuilder_ == null) {
          ensureLabelsIsMutable();
          labels_.set(index, builderForValue.build());
          onChanged();
        } else {
          labelsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Task labels 
       * </pre>
       *
       * <code>repeated .firmament.Label labels = 32;</code>
       */
      public Builder addLabels(firmament.LabelOuterClass.Label value) {
        if (labelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLabelsIsMutable();
          labels_.add(value);
          onChanged();
        } else {
          labelsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Task labels 
       * </pre>
       *
       * <code>repeated .firmament.Label labels = 32;</code>
       */
      public Builder addLabels(
          int index, firmament.LabelOuterClass.Label value) {
        if (labelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLabelsIsMutable();
          labels_.add(index, value);
          onChanged();
        } else {
          labelsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Task labels 
       * </pre>
       *
       * <code>repeated .firmament.Label labels = 32;</code>
       */
      public Builder addLabels(
          firmament.LabelOuterClass.Label.Builder builderForValue) {
        if (labelsBuilder_ == null) {
          ensureLabelsIsMutable();
          labels_.add(builderForValue.build());
          onChanged();
        } else {
          labelsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Task labels 
       * </pre>
       *
       * <code>repeated .firmament.Label labels = 32;</code>
       */
      public Builder addLabels(
          int index, firmament.LabelOuterClass.Label.Builder builderForValue) {
        if (labelsBuilder_ == null) {
          ensureLabelsIsMutable();
          labels_.add(index, builderForValue.build());
          onChanged();
        } else {
          labelsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Task labels 
       * </pre>
       *
       * <code>repeated .firmament.Label labels = 32;</code>
       */
      public Builder addAllLabels(
          java.lang.Iterable<? extends firmament.LabelOuterClass.Label> values) {
        if (labelsBuilder_ == null) {
          ensureLabelsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, labels_);
          onChanged();
        } else {
          labelsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Task labels 
       * </pre>
       *
       * <code>repeated .firmament.Label labels = 32;</code>
       */
      public Builder clearLabels() {
        if (labelsBuilder_ == null) {
          labels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x80000000);
          onChanged();
        } else {
          labelsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Task labels 
       * </pre>
       *
       * <code>repeated .firmament.Label labels = 32;</code>
       */
      public Builder removeLabels(int index) {
        if (labelsBuilder_ == null) {
          ensureLabelsIsMutable();
          labels_.remove(index);
          onChanged();
        } else {
          labelsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Task labels 
       * </pre>
       *
       * <code>repeated .firmament.Label labels = 32;</code>
       */
      public firmament.LabelOuterClass.Label.Builder getLabelsBuilder(
          int index) {
        return getLabelsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Task labels 
       * </pre>
       *
       * <code>repeated .firmament.Label labels = 32;</code>
       */
      public firmament.LabelOuterClass.LabelOrBuilder getLabelsOrBuilder(
          int index) {
        if (labelsBuilder_ == null) {
          return labels_.get(index);  } else {
          return labelsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Task labels 
       * </pre>
       *
       * <code>repeated .firmament.Label labels = 32;</code>
       */
      public java.util.List<? extends firmament.LabelOuterClass.LabelOrBuilder> 
           getLabelsOrBuilderList() {
        if (labelsBuilder_ != null) {
          return labelsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(labels_);
        }
      }
      /**
       * <pre>
       * Task labels 
       * </pre>
       *
       * <code>repeated .firmament.Label labels = 32;</code>
       */
      public firmament.LabelOuterClass.Label.Builder addLabelsBuilder() {
        return getLabelsFieldBuilder().addBuilder(
            firmament.LabelOuterClass.Label.getDefaultInstance());
      }
      /**
       * <pre>
       * Task labels 
       * </pre>
       *
       * <code>repeated .firmament.Label labels = 32;</code>
       */
      public firmament.LabelOuterClass.Label.Builder addLabelsBuilder(
          int index) {
        return getLabelsFieldBuilder().addBuilder(
            index, firmament.LabelOuterClass.Label.getDefaultInstance());
      }
      /**
       * <pre>
       * Task labels 
       * </pre>
       *
       * <code>repeated .firmament.Label labels = 32;</code>
       */
      public java.util.List<firmament.LabelOuterClass.Label.Builder> 
           getLabelsBuilderList() {
        return getLabelsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          firmament.LabelOuterClass.Label, firmament.LabelOuterClass.Label.Builder, firmament.LabelOuterClass.LabelOrBuilder> 
          getLabelsFieldBuilder() {
        if (labelsBuilder_ == null) {
          labelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              firmament.LabelOuterClass.Label, firmament.LabelOuterClass.Label.Builder, firmament.LabelOuterClass.LabelOrBuilder>(
                  labels_,
                  ((bitField0_ & 0x80000000) == 0x80000000),
                  getParentForChildren(),
                  isClean());
          labels_ = null;
        }
        return labelsBuilder_;
      }

      private java.util.List<firmament.LabelSelectorOuterClass.LabelSelector> labelSelectors_ =
        java.util.Collections.emptyList();
      private void ensureLabelSelectorsIsMutable() {
        if (!((bitField1_ & 0x00000001) == 0x00000001)) {
          labelSelectors_ = new java.util.ArrayList<firmament.LabelSelectorOuterClass.LabelSelector>(labelSelectors_);
          bitField1_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          firmament.LabelSelectorOuterClass.LabelSelector, firmament.LabelSelectorOuterClass.LabelSelector.Builder, firmament.LabelSelectorOuterClass.LabelSelectorOrBuilder> labelSelectorsBuilder_;

      /**
       * <pre>
       * Resource label selectors 
       * </pre>
       *
       * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
       */
      public java.util.List<firmament.LabelSelectorOuterClass.LabelSelector> getLabelSelectorsList() {
        if (labelSelectorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(labelSelectors_);
        } else {
          return labelSelectorsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Resource label selectors 
       * </pre>
       *
       * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
       */
      public int getLabelSelectorsCount() {
        if (labelSelectorsBuilder_ == null) {
          return labelSelectors_.size();
        } else {
          return labelSelectorsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Resource label selectors 
       * </pre>
       *
       * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
       */
      public firmament.LabelSelectorOuterClass.LabelSelector getLabelSelectors(int index) {
        if (labelSelectorsBuilder_ == null) {
          return labelSelectors_.get(index);
        } else {
          return labelSelectorsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Resource label selectors 
       * </pre>
       *
       * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
       */
      public Builder setLabelSelectors(
          int index, firmament.LabelSelectorOuterClass.LabelSelector value) {
        if (labelSelectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLabelSelectorsIsMutable();
          labelSelectors_.set(index, value);
          onChanged();
        } else {
          labelSelectorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Resource label selectors 
       * </pre>
       *
       * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
       */
      public Builder setLabelSelectors(
          int index, firmament.LabelSelectorOuterClass.LabelSelector.Builder builderForValue) {
        if (labelSelectorsBuilder_ == null) {
          ensureLabelSelectorsIsMutable();
          labelSelectors_.set(index, builderForValue.build());
          onChanged();
        } else {
          labelSelectorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Resource label selectors 
       * </pre>
       *
       * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
       */
      public Builder addLabelSelectors(firmament.LabelSelectorOuterClass.LabelSelector value) {
        if (labelSelectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLabelSelectorsIsMutable();
          labelSelectors_.add(value);
          onChanged();
        } else {
          labelSelectorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Resource label selectors 
       * </pre>
       *
       * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
       */
      public Builder addLabelSelectors(
          int index, firmament.LabelSelectorOuterClass.LabelSelector value) {
        if (labelSelectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLabelSelectorsIsMutable();
          labelSelectors_.add(index, value);
          onChanged();
        } else {
          labelSelectorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Resource label selectors 
       * </pre>
       *
       * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
       */
      public Builder addLabelSelectors(
          firmament.LabelSelectorOuterClass.LabelSelector.Builder builderForValue) {
        if (labelSelectorsBuilder_ == null) {
          ensureLabelSelectorsIsMutable();
          labelSelectors_.add(builderForValue.build());
          onChanged();
        } else {
          labelSelectorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Resource label selectors 
       * </pre>
       *
       * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
       */
      public Builder addLabelSelectors(
          int index, firmament.LabelSelectorOuterClass.LabelSelector.Builder builderForValue) {
        if (labelSelectorsBuilder_ == null) {
          ensureLabelSelectorsIsMutable();
          labelSelectors_.add(index, builderForValue.build());
          onChanged();
        } else {
          labelSelectorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Resource label selectors 
       * </pre>
       *
       * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
       */
      public Builder addAllLabelSelectors(
          java.lang.Iterable<? extends firmament.LabelSelectorOuterClass.LabelSelector> values) {
        if (labelSelectorsBuilder_ == null) {
          ensureLabelSelectorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, labelSelectors_);
          onChanged();
        } else {
          labelSelectorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Resource label selectors 
       * </pre>
       *
       * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
       */
      public Builder clearLabelSelectors() {
        if (labelSelectorsBuilder_ == null) {
          labelSelectors_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000001);
          onChanged();
        } else {
          labelSelectorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Resource label selectors 
       * </pre>
       *
       * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
       */
      public Builder removeLabelSelectors(int index) {
        if (labelSelectorsBuilder_ == null) {
          ensureLabelSelectorsIsMutable();
          labelSelectors_.remove(index);
          onChanged();
        } else {
          labelSelectorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Resource label selectors 
       * </pre>
       *
       * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
       */
      public firmament.LabelSelectorOuterClass.LabelSelector.Builder getLabelSelectorsBuilder(
          int index) {
        return getLabelSelectorsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Resource label selectors 
       * </pre>
       *
       * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
       */
      public firmament.LabelSelectorOuterClass.LabelSelectorOrBuilder getLabelSelectorsOrBuilder(
          int index) {
        if (labelSelectorsBuilder_ == null) {
          return labelSelectors_.get(index);  } else {
          return labelSelectorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Resource label selectors 
       * </pre>
       *
       * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
       */
      public java.util.List<? extends firmament.LabelSelectorOuterClass.LabelSelectorOrBuilder> 
           getLabelSelectorsOrBuilderList() {
        if (labelSelectorsBuilder_ != null) {
          return labelSelectorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(labelSelectors_);
        }
      }
      /**
       * <pre>
       * Resource label selectors 
       * </pre>
       *
       * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
       */
      public firmament.LabelSelectorOuterClass.LabelSelector.Builder addLabelSelectorsBuilder() {
        return getLabelSelectorsFieldBuilder().addBuilder(
            firmament.LabelSelectorOuterClass.LabelSelector.getDefaultInstance());
      }
      /**
       * <pre>
       * Resource label selectors 
       * </pre>
       *
       * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
       */
      public firmament.LabelSelectorOuterClass.LabelSelector.Builder addLabelSelectorsBuilder(
          int index) {
        return getLabelSelectorsFieldBuilder().addBuilder(
            index, firmament.LabelSelectorOuterClass.LabelSelector.getDefaultInstance());
      }
      /**
       * <pre>
       * Resource label selectors 
       * </pre>
       *
       * <code>repeated .firmament.LabelSelector label_selectors = 33;</code>
       */
      public java.util.List<firmament.LabelSelectorOuterClass.LabelSelector.Builder> 
           getLabelSelectorsBuilderList() {
        return getLabelSelectorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          firmament.LabelSelectorOuterClass.LabelSelector, firmament.LabelSelectorOuterClass.LabelSelector.Builder, firmament.LabelSelectorOuterClass.LabelSelectorOrBuilder> 
          getLabelSelectorsFieldBuilder() {
        if (labelSelectorsBuilder_ == null) {
          labelSelectorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              firmament.LabelSelectorOuterClass.LabelSelector, firmament.LabelSelectorOuterClass.LabelSelector.Builder, firmament.LabelSelectorOuterClass.LabelSelectorOrBuilder>(
                  labelSelectors_,
                  ((bitField1_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          labelSelectors_ = null;
        }
        return labelSelectorsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:firmament.TaskDescriptor)
    }

    // @@protoc_insertion_point(class_scope:firmament.TaskDescriptor)
    private static final firmament.TaskDesc.TaskDescriptor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new firmament.TaskDesc.TaskDescriptor();
    }

    public static firmament.TaskDesc.TaskDescriptor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TaskDescriptor>
        PARSER = new com.google.protobuf.AbstractParser<TaskDescriptor>() {
      public TaskDescriptor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TaskDescriptor(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TaskDescriptor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TaskDescriptor> getParserForType() {
      return PARSER;
    }

    public firmament.TaskDesc.TaskDescriptor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_firmament_TaskDescriptor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_firmament_TaskDescriptor_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017task_desc.proto\022\tfirmament\032\013label.prot" +
      "o\032\024label_selector.proto\032\024reference_desc." +
      "proto\032\025resource_vector.proto\032\027task_final" +
      "_report.proto\"\243\t\n\016TaskDescriptor\022\013\n\003uid\030" +
      "\001 \001(\004\022\014\n\004name\030\002 \001(\t\0222\n\005state\030\003 \001(\0162#.fir" +
      "mament.TaskDescriptor.TaskState\022\016\n\006job_i" +
      "d\030\004 \001(\t\022\r\n\005index\030\005 \001(\004\0224\n\014dependencies\030\006" +
      " \003(\0132\036.firmament.ReferenceDescriptor\022/\n\007" +
      "outputs\030\007 \003(\0132\036.firmament.ReferenceDescr" +
      "iptor\022\016\n\006binary\030\010 \001(\t\022\014\n\004args\030\t \003(\t\022*\n\007s",
      "pawned\030\n \003(\0132\031.firmament.TaskDescriptor\022" +
      "\035\n\025scheduled_to_resource\030\013 \001(\t\022\037\n\027last_h" +
      "eartbeat_location\030\014 \001(\t\022\033\n\023last_heartbea" +
      "t_time\030\r \001(\004\022\024\n\014delegated_to\030\016 \001(\t\022\026\n\016de" +
      "legated_from\030\017 \001(\t\022\023\n\013submit_time\030\020 \001(\004\022" +
      "\022\n\nstart_time\030\021 \001(\004\022\023\n\013finish_time\030\022 \001(\004" +
      "\022\036\n\026total_unscheduled_time\030\023 \001(\004\022\026\n\016tota" +
      "l_run_time\030\024 \001(\004\022\031\n\021relative_deadline\030\025 " +
      "\001(\004\022\031\n\021absolute_deadline\030\026 \001(\004\022\014\n\004port\030\027" +
      " \001(\004\022\022\n\ninput_size\030\030 \001(\004\022\027\n\017inject_task_",
      "lib\030\031 \001(\010\0223\n\020resource_request\030\032 \001(\0132\031.fi" +
      "rmament.ResourceVector\022\020\n\010priority\030\033 \001(\r" +
      "\0225\n\ttask_type\030\034 \001(\0162\".firmament.TaskDesc" +
      "riptor.TaskType\0220\n\014final_report\030\035 \001(\0132\032." +
      "firmament.TaskFinalReport\022\024\n\014trace_job_i" +
      "d\030\036 \001(\004\022\025\n\rtrace_task_id\030\037 \001(\004\022 \n\006labels" +
      "\030  \003(\0132\020.firmament.Label\0221\n\017label_select" +
      "ors\030! \003(\0132\030.firmament.LabelSelector\"\223\001\n\t" +
      "TaskState\022\013\n\007CREATED\020\000\022\014\n\010BLOCKING\020\001\022\014\n\010" +
      "RUNNABLE\020\002\022\014\n\010ASSIGNED\020\003\022\013\n\007RUNNING\020\004\022\r\n",
      "\tCOMPLETED\020\005\022\n\n\006FAILED\020\006\022\013\n\007ABORTED\020\007\022\r\n" +
      "\tDELEGATED\020\010\022\013\n\007UNKNOWN\020\t\"8\n\010TaskType\022\t\n" +
      "\005SHEEP\020\000\022\n\n\006RABBIT\020\001\022\t\n\005DEVIL\020\002\022\n\n\006TURTL" +
      "E\020\003b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          firmament.LabelOuterClass.getDescriptor(),
          firmament.LabelSelectorOuterClass.getDescriptor(),
          firmament.ReferenceDesc.getDescriptor(),
          firmament.ResourceVectorOuterClass.getDescriptor(),
          firmament.TaskFinalReportOuterClass.getDescriptor(),
        }, assigner);
    internal_static_firmament_TaskDescriptor_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_firmament_TaskDescriptor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_firmament_TaskDescriptor_descriptor,
        new java.lang.String[] { "Uid", "Name", "State", "JobId", "Index", "Dependencies", "Outputs", "Binary", "Args", "Spawned", "ScheduledToResource", "LastHeartbeatLocation", "LastHeartbeatTime", "DelegatedTo", "DelegatedFrom", "SubmitTime", "StartTime", "FinishTime", "TotalUnscheduledTime", "TotalRunTime", "RelativeDeadline", "AbsoluteDeadline", "Port", "InputSize", "InjectTaskLib", "ResourceRequest", "Priority", "TaskType", "FinalReport", "TraceJobId", "TraceTaskId", "Labels", "LabelSelectors", });
    firmament.LabelOuterClass.getDescriptor();
    firmament.LabelSelectorOuterClass.getDescriptor();
    firmament.ReferenceDesc.getDescriptor();
    firmament.ResourceVectorOuterClass.getDescriptor();
    firmament.TaskFinalReportOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
