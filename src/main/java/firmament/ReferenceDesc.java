// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reference_desc.proto

package firmament;

public final class ReferenceDesc {
  private ReferenceDesc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ReferenceDescriptorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:firmament.ReferenceDescriptor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes id = 1;</code>
     */
    com.google.protobuf.ByteString getId();

    /**
     * <code>optional .firmament.ReferenceDescriptor.ReferenceType type = 2;</code>
     */
    int getTypeValue();
    /**
     * <code>optional .firmament.ReferenceDescriptor.ReferenceType type = 2;</code>
     */
    firmament.ReferenceDesc.ReferenceDescriptor.ReferenceType getType();

    /**
     * <code>optional .firmament.ReferenceDescriptor.ReferenceScope scope = 3;</code>
     */
    int getScopeValue();
    /**
     * <code>optional .firmament.ReferenceDescriptor.ReferenceScope scope = 3;</code>
     */
    firmament.ReferenceDesc.ReferenceDescriptor.ReferenceScope getScope();

    /**
     * <code>optional bool non_deterministic = 4;</code>
     */
    boolean getNonDeterministic();

    /**
     * <code>optional uint64 size = 5;</code>
     */
    long getSize();

    /**
     * <code>optional string location = 6;</code>
     */
    java.lang.String getLocation();
    /**
     * <code>optional string location = 6;</code>
     */
    com.google.protobuf.ByteString
        getLocationBytes();

    /**
     * <code>optional bytes inline_data = 7;</code>
     */
    com.google.protobuf.ByteString getInlineData();

    /**
     * <code>optional uint64 producing_task = 8;</code>
     */
    long getProducingTask();

    /**
     * <code>optional uint64 time_to_compute = 9;</code>
     */
    long getTimeToCompute();

    /**
     * <code>optional uint64 version = 10;</code>
     */
    long getVersion();
  }
  /**
   * Protobuf type {@code firmament.ReferenceDescriptor}
   */
  public  static final class ReferenceDescriptor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:firmament.ReferenceDescriptor)
      ReferenceDescriptorOrBuilder {
    // Use ReferenceDescriptor.newBuilder() to construct.
    private ReferenceDescriptor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReferenceDescriptor() {
      id_ = com.google.protobuf.ByteString.EMPTY;
      type_ = 0;
      scope_ = 0;
      nonDeterministic_ = false;
      size_ = 0L;
      location_ = "";
      inlineData_ = com.google.protobuf.ByteString.EMPTY;
      producingTask_ = 0L;
      timeToCompute_ = 0L;
      version_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ReferenceDescriptor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              id_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              scope_ = rawValue;
              break;
            }
            case 32: {

              nonDeterministic_ = input.readBool();
              break;
            }
            case 40: {

              size_ = input.readUInt64();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              location_ = s;
              break;
            }
            case 58: {

              inlineData_ = input.readBytes();
              break;
            }
            case 64: {

              producingTask_ = input.readUInt64();
              break;
            }
            case 72: {

              timeToCompute_ = input.readUInt64();
              break;
            }
            case 80: {

              version_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return firmament.ReferenceDesc.internal_static_firmament_ReferenceDescriptor_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return firmament.ReferenceDesc.internal_static_firmament_ReferenceDescriptor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              firmament.ReferenceDesc.ReferenceDescriptor.class, firmament.ReferenceDesc.ReferenceDescriptor.Builder.class);
    }

    /**
     * Protobuf enum {@code firmament.ReferenceDescriptor.ReferenceType}
     */
    public enum ReferenceType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>TOMBSTONE = 0;</code>
       */
      TOMBSTONE(0),
      /**
       * <code>FUTURE = 1;</code>
       */
      FUTURE(1),
      /**
       * <code>CONCRETE = 2;</code>
       */
      CONCRETE(2),
      /**
       * <code>STREAM = 3;</code>
       */
      STREAM(3),
      /**
       * <code>VALUE = 4;</code>
       */
      VALUE(4),
      /**
       * <code>ERROR = 5;</code>
       */
      ERROR(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>TOMBSTONE = 0;</code>
       */
      public static final int TOMBSTONE_VALUE = 0;
      /**
       * <code>FUTURE = 1;</code>
       */
      public static final int FUTURE_VALUE = 1;
      /**
       * <code>CONCRETE = 2;</code>
       */
      public static final int CONCRETE_VALUE = 2;
      /**
       * <code>STREAM = 3;</code>
       */
      public static final int STREAM_VALUE = 3;
      /**
       * <code>VALUE = 4;</code>
       */
      public static final int VALUE_VALUE = 4;
      /**
       * <code>ERROR = 5;</code>
       */
      public static final int ERROR_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ReferenceType valueOf(int value) {
        return forNumber(value);
      }

      public static ReferenceType forNumber(int value) {
        switch (value) {
          case 0: return TOMBSTONE;
          case 1: return FUTURE;
          case 2: return CONCRETE;
          case 3: return STREAM;
          case 4: return VALUE;
          case 5: return ERROR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ReferenceType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ReferenceType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ReferenceType>() {
              public ReferenceType findValueByNumber(int number) {
                return ReferenceType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return firmament.ReferenceDesc.ReferenceDescriptor.getDescriptor().getEnumTypes().get(0);
      }

      private static final ReferenceType[] VALUES = values();

      public static ReferenceType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ReferenceType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:firmament.ReferenceDescriptor.ReferenceType)
    }

    /**
     * Protobuf enum {@code firmament.ReferenceDescriptor.ReferenceScope}
     */
    public enum ReferenceScope
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * TODO(malte): really encode like this?
       * </pre>
       *
       * <code>PUBLIC = 0;</code>
       */
      PUBLIC(0),
      /**
       * <code>PRIVATE = 1;</code>
       */
      PRIVATE(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * TODO(malte): really encode like this?
       * </pre>
       *
       * <code>PUBLIC = 0;</code>
       */
      public static final int PUBLIC_VALUE = 0;
      /**
       * <code>PRIVATE = 1;</code>
       */
      public static final int PRIVATE_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ReferenceScope valueOf(int value) {
        return forNumber(value);
      }

      public static ReferenceScope forNumber(int value) {
        switch (value) {
          case 0: return PUBLIC;
          case 1: return PRIVATE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ReferenceScope>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ReferenceScope> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ReferenceScope>() {
              public ReferenceScope findValueByNumber(int number) {
                return ReferenceScope.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return firmament.ReferenceDesc.ReferenceDescriptor.getDescriptor().getEnumTypes().get(1);
      }

      private static final ReferenceScope[] VALUES = values();

      public static ReferenceScope valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ReferenceScope(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:firmament.ReferenceDescriptor.ReferenceScope)
    }

    public static final int ID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString id_;
    /**
     * <code>optional bytes id = 1;</code>
     */
    public com.google.protobuf.ByteString getId() {
      return id_;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>optional .firmament.ReferenceDescriptor.ReferenceType type = 2;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>optional .firmament.ReferenceDescriptor.ReferenceType type = 2;</code>
     */
    public firmament.ReferenceDesc.ReferenceDescriptor.ReferenceType getType() {
      firmament.ReferenceDesc.ReferenceDescriptor.ReferenceType result = firmament.ReferenceDesc.ReferenceDescriptor.ReferenceType.valueOf(type_);
      return result == null ? firmament.ReferenceDesc.ReferenceDescriptor.ReferenceType.UNRECOGNIZED : result;
    }

    public static final int SCOPE_FIELD_NUMBER = 3;
    private int scope_;
    /**
     * <code>optional .firmament.ReferenceDescriptor.ReferenceScope scope = 3;</code>
     */
    public int getScopeValue() {
      return scope_;
    }
    /**
     * <code>optional .firmament.ReferenceDescriptor.ReferenceScope scope = 3;</code>
     */
    public firmament.ReferenceDesc.ReferenceDescriptor.ReferenceScope getScope() {
      firmament.ReferenceDesc.ReferenceDescriptor.ReferenceScope result = firmament.ReferenceDesc.ReferenceDescriptor.ReferenceScope.valueOf(scope_);
      return result == null ? firmament.ReferenceDesc.ReferenceDescriptor.ReferenceScope.UNRECOGNIZED : result;
    }

    public static final int NON_DETERMINISTIC_FIELD_NUMBER = 4;
    private boolean nonDeterministic_;
    /**
     * <code>optional bool non_deterministic = 4;</code>
     */
    public boolean getNonDeterministic() {
      return nonDeterministic_;
    }

    public static final int SIZE_FIELD_NUMBER = 5;
    private long size_;
    /**
     * <code>optional uint64 size = 5;</code>
     */
    public long getSize() {
      return size_;
    }

    public static final int LOCATION_FIELD_NUMBER = 6;
    private volatile java.lang.Object location_;
    /**
     * <code>optional string location = 6;</code>
     */
    public java.lang.String getLocation() {
      java.lang.Object ref = location_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        location_ = s;
        return s;
      }
    }
    /**
     * <code>optional string location = 6;</code>
     */
    public com.google.protobuf.ByteString
        getLocationBytes() {
      java.lang.Object ref = location_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        location_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INLINE_DATA_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString inlineData_;
    /**
     * <code>optional bytes inline_data = 7;</code>
     */
    public com.google.protobuf.ByteString getInlineData() {
      return inlineData_;
    }

    public static final int PRODUCING_TASK_FIELD_NUMBER = 8;
    private long producingTask_;
    /**
     * <code>optional uint64 producing_task = 8;</code>
     */
    public long getProducingTask() {
      return producingTask_;
    }

    public static final int TIME_TO_COMPUTE_FIELD_NUMBER = 9;
    private long timeToCompute_;
    /**
     * <code>optional uint64 time_to_compute = 9;</code>
     */
    public long getTimeToCompute() {
      return timeToCompute_;
    }

    public static final int VERSION_FIELD_NUMBER = 10;
    private long version_;
    /**
     * <code>optional uint64 version = 10;</code>
     */
    public long getVersion() {
      return version_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!id_.isEmpty()) {
        output.writeBytes(1, id_);
      }
      if (type_ != firmament.ReferenceDesc.ReferenceDescriptor.ReferenceType.TOMBSTONE.getNumber()) {
        output.writeEnum(2, type_);
      }
      if (scope_ != firmament.ReferenceDesc.ReferenceDescriptor.ReferenceScope.PUBLIC.getNumber()) {
        output.writeEnum(3, scope_);
      }
      if (nonDeterministic_ != false) {
        output.writeBool(4, nonDeterministic_);
      }
      if (size_ != 0L) {
        output.writeUInt64(5, size_);
      }
      if (!getLocationBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, location_);
      }
      if (!inlineData_.isEmpty()) {
        output.writeBytes(7, inlineData_);
      }
      if (producingTask_ != 0L) {
        output.writeUInt64(8, producingTask_);
      }
      if (timeToCompute_ != 0L) {
        output.writeUInt64(9, timeToCompute_);
      }
      if (version_ != 0L) {
        output.writeUInt64(10, version_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!id_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, id_);
      }
      if (type_ != firmament.ReferenceDesc.ReferenceDescriptor.ReferenceType.TOMBSTONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_);
      }
      if (scope_ != firmament.ReferenceDesc.ReferenceDescriptor.ReferenceScope.PUBLIC.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, scope_);
      }
      if (nonDeterministic_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, nonDeterministic_);
      }
      if (size_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, size_);
      }
      if (!getLocationBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, location_);
      }
      if (!inlineData_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, inlineData_);
      }
      if (producingTask_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, producingTask_);
      }
      if (timeToCompute_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, timeToCompute_);
      }
      if (version_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, version_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof firmament.ReferenceDesc.ReferenceDescriptor)) {
        return super.equals(obj);
      }
      firmament.ReferenceDesc.ReferenceDescriptor other = (firmament.ReferenceDesc.ReferenceDescriptor) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && type_ == other.type_;
      result = result && scope_ == other.scope_;
      result = result && (getNonDeterministic()
          == other.getNonDeterministic());
      result = result && (getSize()
          == other.getSize());
      result = result && getLocation()
          .equals(other.getLocation());
      result = result && getInlineData()
          .equals(other.getInlineData());
      result = result && (getProducingTask()
          == other.getProducingTask());
      result = result && (getTimeToCompute()
          == other.getTimeToCompute());
      result = result && (getVersion()
          == other.getVersion());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + SCOPE_FIELD_NUMBER;
      hash = (53 * hash) + scope_;
      hash = (37 * hash) + NON_DETERMINISTIC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getNonDeterministic());
      hash = (37 * hash) + SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSize());
      hash = (37 * hash) + LOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getLocation().hashCode();
      hash = (37 * hash) + INLINE_DATA_FIELD_NUMBER;
      hash = (53 * hash) + getInlineData().hashCode();
      hash = (37 * hash) + PRODUCING_TASK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getProducingTask());
      hash = (37 * hash) + TIME_TO_COMPUTE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimeToCompute());
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getVersion());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static firmament.ReferenceDesc.ReferenceDescriptor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static firmament.ReferenceDesc.ReferenceDescriptor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static firmament.ReferenceDesc.ReferenceDescriptor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static firmament.ReferenceDesc.ReferenceDescriptor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static firmament.ReferenceDesc.ReferenceDescriptor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static firmament.ReferenceDesc.ReferenceDescriptor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static firmament.ReferenceDesc.ReferenceDescriptor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static firmament.ReferenceDesc.ReferenceDescriptor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static firmament.ReferenceDesc.ReferenceDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static firmament.ReferenceDesc.ReferenceDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(firmament.ReferenceDesc.ReferenceDescriptor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code firmament.ReferenceDescriptor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:firmament.ReferenceDescriptor)
        firmament.ReferenceDesc.ReferenceDescriptorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return firmament.ReferenceDesc.internal_static_firmament_ReferenceDescriptor_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return firmament.ReferenceDesc.internal_static_firmament_ReferenceDescriptor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                firmament.ReferenceDesc.ReferenceDescriptor.class, firmament.ReferenceDesc.ReferenceDescriptor.Builder.class);
      }

      // Construct using firmament.ReferenceDesc.ReferenceDescriptor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = com.google.protobuf.ByteString.EMPTY;

        type_ = 0;

        scope_ = 0;

        nonDeterministic_ = false;

        size_ = 0L;

        location_ = "";

        inlineData_ = com.google.protobuf.ByteString.EMPTY;

        producingTask_ = 0L;

        timeToCompute_ = 0L;

        version_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return firmament.ReferenceDesc.internal_static_firmament_ReferenceDescriptor_descriptor;
      }

      public firmament.ReferenceDesc.ReferenceDescriptor getDefaultInstanceForType() {
        return firmament.ReferenceDesc.ReferenceDescriptor.getDefaultInstance();
      }

      public firmament.ReferenceDesc.ReferenceDescriptor build() {
        firmament.ReferenceDesc.ReferenceDescriptor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public firmament.ReferenceDesc.ReferenceDescriptor buildPartial() {
        firmament.ReferenceDesc.ReferenceDescriptor result = new firmament.ReferenceDesc.ReferenceDescriptor(this);
        result.id_ = id_;
        result.type_ = type_;
        result.scope_ = scope_;
        result.nonDeterministic_ = nonDeterministic_;
        result.size_ = size_;
        result.location_ = location_;
        result.inlineData_ = inlineData_;
        result.producingTask_ = producingTask_;
        result.timeToCompute_ = timeToCompute_;
        result.version_ = version_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof firmament.ReferenceDesc.ReferenceDescriptor) {
          return mergeFrom((firmament.ReferenceDesc.ReferenceDescriptor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(firmament.ReferenceDesc.ReferenceDescriptor other) {
        if (other == firmament.ReferenceDesc.ReferenceDescriptor.getDefaultInstance()) return this;
        if (other.getId() != com.google.protobuf.ByteString.EMPTY) {
          setId(other.getId());
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.scope_ != 0) {
          setScopeValue(other.getScopeValue());
        }
        if (other.getNonDeterministic() != false) {
          setNonDeterministic(other.getNonDeterministic());
        }
        if (other.getSize() != 0L) {
          setSize(other.getSize());
        }
        if (!other.getLocation().isEmpty()) {
          location_ = other.location_;
          onChanged();
        }
        if (other.getInlineData() != com.google.protobuf.ByteString.EMPTY) {
          setInlineData(other.getInlineData());
        }
        if (other.getProducingTask() != 0L) {
          setProducingTask(other.getProducingTask());
        }
        if (other.getTimeToCompute() != 0L) {
          setTimeToCompute(other.getTimeToCompute());
        }
        if (other.getVersion() != 0L) {
          setVersion(other.getVersion());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        firmament.ReferenceDesc.ReferenceDescriptor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (firmament.ReferenceDesc.ReferenceDescriptor) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString id_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes id = 1;</code>
       */
      public com.google.protobuf.ByteString getId() {
        return id_;
      }
      /**
       * <code>optional bytes id = 1;</code>
       */
      public Builder setId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <code>optional .firmament.ReferenceDescriptor.ReferenceType type = 2;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>optional .firmament.ReferenceDescriptor.ReferenceType type = 2;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .firmament.ReferenceDescriptor.ReferenceType type = 2;</code>
       */
      public firmament.ReferenceDesc.ReferenceDescriptor.ReferenceType getType() {
        firmament.ReferenceDesc.ReferenceDescriptor.ReferenceType result = firmament.ReferenceDesc.ReferenceDescriptor.ReferenceType.valueOf(type_);
        return result == null ? firmament.ReferenceDesc.ReferenceDescriptor.ReferenceType.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .firmament.ReferenceDescriptor.ReferenceType type = 2;</code>
       */
      public Builder setType(firmament.ReferenceDesc.ReferenceDescriptor.ReferenceType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .firmament.ReferenceDescriptor.ReferenceType type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int scope_ = 0;
      /**
       * <code>optional .firmament.ReferenceDescriptor.ReferenceScope scope = 3;</code>
       */
      public int getScopeValue() {
        return scope_;
      }
      /**
       * <code>optional .firmament.ReferenceDescriptor.ReferenceScope scope = 3;</code>
       */
      public Builder setScopeValue(int value) {
        scope_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .firmament.ReferenceDescriptor.ReferenceScope scope = 3;</code>
       */
      public firmament.ReferenceDesc.ReferenceDescriptor.ReferenceScope getScope() {
        firmament.ReferenceDesc.ReferenceDescriptor.ReferenceScope result = firmament.ReferenceDesc.ReferenceDescriptor.ReferenceScope.valueOf(scope_);
        return result == null ? firmament.ReferenceDesc.ReferenceDescriptor.ReferenceScope.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .firmament.ReferenceDescriptor.ReferenceScope scope = 3;</code>
       */
      public Builder setScope(firmament.ReferenceDesc.ReferenceDescriptor.ReferenceScope value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        scope_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .firmament.ReferenceDescriptor.ReferenceScope scope = 3;</code>
       */
      public Builder clearScope() {
        
        scope_ = 0;
        onChanged();
        return this;
      }

      private boolean nonDeterministic_ ;
      /**
       * <code>optional bool non_deterministic = 4;</code>
       */
      public boolean getNonDeterministic() {
        return nonDeterministic_;
      }
      /**
       * <code>optional bool non_deterministic = 4;</code>
       */
      public Builder setNonDeterministic(boolean value) {
        
        nonDeterministic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool non_deterministic = 4;</code>
       */
      public Builder clearNonDeterministic() {
        
        nonDeterministic_ = false;
        onChanged();
        return this;
      }

      private long size_ ;
      /**
       * <code>optional uint64 size = 5;</code>
       */
      public long getSize() {
        return size_;
      }
      /**
       * <code>optional uint64 size = 5;</code>
       */
      public Builder setSize(long value) {
        
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 size = 5;</code>
       */
      public Builder clearSize() {
        
        size_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object location_ = "";
      /**
       * <code>optional string location = 6;</code>
       */
      public java.lang.String getLocation() {
        java.lang.Object ref = location_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          location_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string location = 6;</code>
       */
      public com.google.protobuf.ByteString
          getLocationBytes() {
        java.lang.Object ref = location_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          location_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string location = 6;</code>
       */
      public Builder setLocation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        location_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string location = 6;</code>
       */
      public Builder clearLocation() {
        
        location_ = getDefaultInstance().getLocation();
        onChanged();
        return this;
      }
      /**
       * <code>optional string location = 6;</code>
       */
      public Builder setLocationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        location_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString inlineData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes inline_data = 7;</code>
       */
      public com.google.protobuf.ByteString getInlineData() {
        return inlineData_;
      }
      /**
       * <code>optional bytes inline_data = 7;</code>
       */
      public Builder setInlineData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        inlineData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes inline_data = 7;</code>
       */
      public Builder clearInlineData() {
        
        inlineData_ = getDefaultInstance().getInlineData();
        onChanged();
        return this;
      }

      private long producingTask_ ;
      /**
       * <code>optional uint64 producing_task = 8;</code>
       */
      public long getProducingTask() {
        return producingTask_;
      }
      /**
       * <code>optional uint64 producing_task = 8;</code>
       */
      public Builder setProducingTask(long value) {
        
        producingTask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 producing_task = 8;</code>
       */
      public Builder clearProducingTask() {
        
        producingTask_ = 0L;
        onChanged();
        return this;
      }

      private long timeToCompute_ ;
      /**
       * <code>optional uint64 time_to_compute = 9;</code>
       */
      public long getTimeToCompute() {
        return timeToCompute_;
      }
      /**
       * <code>optional uint64 time_to_compute = 9;</code>
       */
      public Builder setTimeToCompute(long value) {
        
        timeToCompute_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 time_to_compute = 9;</code>
       */
      public Builder clearTimeToCompute() {
        
        timeToCompute_ = 0L;
        onChanged();
        return this;
      }

      private long version_ ;
      /**
       * <code>optional uint64 version = 10;</code>
       */
      public long getVersion() {
        return version_;
      }
      /**
       * <code>optional uint64 version = 10;</code>
       */
      public Builder setVersion(long value) {
        
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 version = 10;</code>
       */
      public Builder clearVersion() {
        
        version_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:firmament.ReferenceDescriptor)
    }

    // @@protoc_insertion_point(class_scope:firmament.ReferenceDescriptor)
    private static final firmament.ReferenceDesc.ReferenceDescriptor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new firmament.ReferenceDesc.ReferenceDescriptor();
    }

    public static firmament.ReferenceDesc.ReferenceDescriptor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReferenceDescriptor>
        PARSER = new com.google.protobuf.AbstractParser<ReferenceDescriptor>() {
      public ReferenceDescriptor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ReferenceDescriptor(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReferenceDescriptor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReferenceDescriptor> getParserForType() {
      return PARSER;
    }

    public firmament.ReferenceDesc.ReferenceDescriptor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_firmament_ReferenceDescriptor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_firmament_ReferenceDescriptor_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024reference_desc.proto\022\tfirmament\"\264\003\n\023Re" +
      "ferenceDescriptor\022\n\n\002id\030\001 \001(\014\022:\n\004type\030\002 " +
      "\001(\0162,.firmament.ReferenceDescriptor.Refe" +
      "renceType\022<\n\005scope\030\003 \001(\0162-.firmament.Ref" +
      "erenceDescriptor.ReferenceScope\022\031\n\021non_d" +
      "eterministic\030\004 \001(\010\022\014\n\004size\030\005 \001(\004\022\020\n\010loca" +
      "tion\030\006 \001(\t\022\023\n\013inline_data\030\007 \001(\014\022\026\n\016produ" +
      "cing_task\030\010 \001(\004\022\027\n\017time_to_compute\030\t \001(\004" +
      "\022\017\n\007version\030\n \001(\004\"Z\n\rReferenceType\022\r\n\tTO" +
      "MBSTONE\020\000\022\n\n\006FUTURE\020\001\022\014\n\010CONCRETE\020\002\022\n\n\006S",
      "TREAM\020\003\022\t\n\005VALUE\020\004\022\t\n\005ERROR\020\005\")\n\016Referen" +
      "ceScope\022\n\n\006PUBLIC\020\000\022\013\n\007PRIVATE\020\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_firmament_ReferenceDescriptor_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_firmament_ReferenceDescriptor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_firmament_ReferenceDescriptor_descriptor,
        new java.lang.String[] { "Id", "Type", "Scope", "NonDeterministic", "Size", "Location", "InlineData", "ProducingTask", "TimeToCompute", "Version", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
