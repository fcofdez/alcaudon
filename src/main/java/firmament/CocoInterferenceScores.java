// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coco_interference_scores.proto

package firmament;

public final class CocoInterferenceScores {
  private CocoInterferenceScores() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CoCoInterferenceScoresOrBuilder extends
      // @@protoc_insertion_point(interface_extends:firmament.CoCoInterferenceScores)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 devil_penalty = 1;</code>
     */
    int getDevilPenalty();

    /**
     * <code>optional uint32 rabbit_penalty = 2;</code>
     */
    int getRabbitPenalty();

    /**
     * <code>optional uint32 sheep_penalty = 3;</code>
     */
    int getSheepPenalty();

    /**
     * <code>optional uint32 turtle_penalty = 4;</code>
     */
    int getTurtlePenalty();
  }
  /**
   * Protobuf type {@code firmament.CoCoInterferenceScores}
   */
  public  static final class CoCoInterferenceScores extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:firmament.CoCoInterferenceScores)
      CoCoInterferenceScoresOrBuilder {
    // Use CoCoInterferenceScores.newBuilder() to construct.
    private CoCoInterferenceScores(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CoCoInterferenceScores() {
      devilPenalty_ = 0;
      rabbitPenalty_ = 0;
      sheepPenalty_ = 0;
      turtlePenalty_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CoCoInterferenceScores(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              devilPenalty_ = input.readUInt32();
              break;
            }
            case 16: {

              rabbitPenalty_ = input.readUInt32();
              break;
            }
            case 24: {

              sheepPenalty_ = input.readUInt32();
              break;
            }
            case 32: {

              turtlePenalty_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return firmament.CocoInterferenceScores.internal_static_firmament_CoCoInterferenceScores_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return firmament.CocoInterferenceScores.internal_static_firmament_CoCoInterferenceScores_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              firmament.CocoInterferenceScores.CoCoInterferenceScores.class, firmament.CocoInterferenceScores.CoCoInterferenceScores.Builder.class);
    }

    public static final int DEVIL_PENALTY_FIELD_NUMBER = 1;
    private int devilPenalty_;
    /**
     * <code>optional uint32 devil_penalty = 1;</code>
     */
    public int getDevilPenalty() {
      return devilPenalty_;
    }

    public static final int RABBIT_PENALTY_FIELD_NUMBER = 2;
    private int rabbitPenalty_;
    /**
     * <code>optional uint32 rabbit_penalty = 2;</code>
     */
    public int getRabbitPenalty() {
      return rabbitPenalty_;
    }

    public static final int SHEEP_PENALTY_FIELD_NUMBER = 3;
    private int sheepPenalty_;
    /**
     * <code>optional uint32 sheep_penalty = 3;</code>
     */
    public int getSheepPenalty() {
      return sheepPenalty_;
    }

    public static final int TURTLE_PENALTY_FIELD_NUMBER = 4;
    private int turtlePenalty_;
    /**
     * <code>optional uint32 turtle_penalty = 4;</code>
     */
    public int getTurtlePenalty() {
      return turtlePenalty_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (devilPenalty_ != 0) {
        output.writeUInt32(1, devilPenalty_);
      }
      if (rabbitPenalty_ != 0) {
        output.writeUInt32(2, rabbitPenalty_);
      }
      if (sheepPenalty_ != 0) {
        output.writeUInt32(3, sheepPenalty_);
      }
      if (turtlePenalty_ != 0) {
        output.writeUInt32(4, turtlePenalty_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (devilPenalty_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, devilPenalty_);
      }
      if (rabbitPenalty_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, rabbitPenalty_);
      }
      if (sheepPenalty_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sheepPenalty_);
      }
      if (turtlePenalty_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, turtlePenalty_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof firmament.CocoInterferenceScores.CoCoInterferenceScores)) {
        return super.equals(obj);
      }
      firmament.CocoInterferenceScores.CoCoInterferenceScores other = (firmament.CocoInterferenceScores.CoCoInterferenceScores) obj;

      boolean result = true;
      result = result && (getDevilPenalty()
          == other.getDevilPenalty());
      result = result && (getRabbitPenalty()
          == other.getRabbitPenalty());
      result = result && (getSheepPenalty()
          == other.getSheepPenalty());
      result = result && (getTurtlePenalty()
          == other.getTurtlePenalty());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + DEVIL_PENALTY_FIELD_NUMBER;
      hash = (53 * hash) + getDevilPenalty();
      hash = (37 * hash) + RABBIT_PENALTY_FIELD_NUMBER;
      hash = (53 * hash) + getRabbitPenalty();
      hash = (37 * hash) + SHEEP_PENALTY_FIELD_NUMBER;
      hash = (53 * hash) + getSheepPenalty();
      hash = (37 * hash) + TURTLE_PENALTY_FIELD_NUMBER;
      hash = (53 * hash) + getTurtlePenalty();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static firmament.CocoInterferenceScores.CoCoInterferenceScores parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static firmament.CocoInterferenceScores.CoCoInterferenceScores parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static firmament.CocoInterferenceScores.CoCoInterferenceScores parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static firmament.CocoInterferenceScores.CoCoInterferenceScores parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static firmament.CocoInterferenceScores.CoCoInterferenceScores parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static firmament.CocoInterferenceScores.CoCoInterferenceScores parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static firmament.CocoInterferenceScores.CoCoInterferenceScores parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static firmament.CocoInterferenceScores.CoCoInterferenceScores parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static firmament.CocoInterferenceScores.CoCoInterferenceScores parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static firmament.CocoInterferenceScores.CoCoInterferenceScores parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(firmament.CocoInterferenceScores.CoCoInterferenceScores prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code firmament.CoCoInterferenceScores}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:firmament.CoCoInterferenceScores)
        firmament.CocoInterferenceScores.CoCoInterferenceScoresOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return firmament.CocoInterferenceScores.internal_static_firmament_CoCoInterferenceScores_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return firmament.CocoInterferenceScores.internal_static_firmament_CoCoInterferenceScores_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                firmament.CocoInterferenceScores.CoCoInterferenceScores.class, firmament.CocoInterferenceScores.CoCoInterferenceScores.Builder.class);
      }

      // Construct using firmament.CocoInterferenceScores.CoCoInterferenceScores.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        devilPenalty_ = 0;

        rabbitPenalty_ = 0;

        sheepPenalty_ = 0;

        turtlePenalty_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return firmament.CocoInterferenceScores.internal_static_firmament_CoCoInterferenceScores_descriptor;
      }

      public firmament.CocoInterferenceScores.CoCoInterferenceScores getDefaultInstanceForType() {
        return firmament.CocoInterferenceScores.CoCoInterferenceScores.getDefaultInstance();
      }

      public firmament.CocoInterferenceScores.CoCoInterferenceScores build() {
        firmament.CocoInterferenceScores.CoCoInterferenceScores result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public firmament.CocoInterferenceScores.CoCoInterferenceScores buildPartial() {
        firmament.CocoInterferenceScores.CoCoInterferenceScores result = new firmament.CocoInterferenceScores.CoCoInterferenceScores(this);
        result.devilPenalty_ = devilPenalty_;
        result.rabbitPenalty_ = rabbitPenalty_;
        result.sheepPenalty_ = sheepPenalty_;
        result.turtlePenalty_ = turtlePenalty_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof firmament.CocoInterferenceScores.CoCoInterferenceScores) {
          return mergeFrom((firmament.CocoInterferenceScores.CoCoInterferenceScores)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(firmament.CocoInterferenceScores.CoCoInterferenceScores other) {
        if (other == firmament.CocoInterferenceScores.CoCoInterferenceScores.getDefaultInstance()) return this;
        if (other.getDevilPenalty() != 0) {
          setDevilPenalty(other.getDevilPenalty());
        }
        if (other.getRabbitPenalty() != 0) {
          setRabbitPenalty(other.getRabbitPenalty());
        }
        if (other.getSheepPenalty() != 0) {
          setSheepPenalty(other.getSheepPenalty());
        }
        if (other.getTurtlePenalty() != 0) {
          setTurtlePenalty(other.getTurtlePenalty());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        firmament.CocoInterferenceScores.CoCoInterferenceScores parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (firmament.CocoInterferenceScores.CoCoInterferenceScores) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int devilPenalty_ ;
      /**
       * <code>optional uint32 devil_penalty = 1;</code>
       */
      public int getDevilPenalty() {
        return devilPenalty_;
      }
      /**
       * <code>optional uint32 devil_penalty = 1;</code>
       */
      public Builder setDevilPenalty(int value) {
        
        devilPenalty_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 devil_penalty = 1;</code>
       */
      public Builder clearDevilPenalty() {
        
        devilPenalty_ = 0;
        onChanged();
        return this;
      }

      private int rabbitPenalty_ ;
      /**
       * <code>optional uint32 rabbit_penalty = 2;</code>
       */
      public int getRabbitPenalty() {
        return rabbitPenalty_;
      }
      /**
       * <code>optional uint32 rabbit_penalty = 2;</code>
       */
      public Builder setRabbitPenalty(int value) {
        
        rabbitPenalty_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 rabbit_penalty = 2;</code>
       */
      public Builder clearRabbitPenalty() {
        
        rabbitPenalty_ = 0;
        onChanged();
        return this;
      }

      private int sheepPenalty_ ;
      /**
       * <code>optional uint32 sheep_penalty = 3;</code>
       */
      public int getSheepPenalty() {
        return sheepPenalty_;
      }
      /**
       * <code>optional uint32 sheep_penalty = 3;</code>
       */
      public Builder setSheepPenalty(int value) {
        
        sheepPenalty_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 sheep_penalty = 3;</code>
       */
      public Builder clearSheepPenalty() {
        
        sheepPenalty_ = 0;
        onChanged();
        return this;
      }

      private int turtlePenalty_ ;
      /**
       * <code>optional uint32 turtle_penalty = 4;</code>
       */
      public int getTurtlePenalty() {
        return turtlePenalty_;
      }
      /**
       * <code>optional uint32 turtle_penalty = 4;</code>
       */
      public Builder setTurtlePenalty(int value) {
        
        turtlePenalty_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 turtle_penalty = 4;</code>
       */
      public Builder clearTurtlePenalty() {
        
        turtlePenalty_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:firmament.CoCoInterferenceScores)
    }

    // @@protoc_insertion_point(class_scope:firmament.CoCoInterferenceScores)
    private static final firmament.CocoInterferenceScores.CoCoInterferenceScores DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new firmament.CocoInterferenceScores.CoCoInterferenceScores();
    }

    public static firmament.CocoInterferenceScores.CoCoInterferenceScores getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CoCoInterferenceScores>
        PARSER = new com.google.protobuf.AbstractParser<CoCoInterferenceScores>() {
      public CoCoInterferenceScores parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CoCoInterferenceScores(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CoCoInterferenceScores> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CoCoInterferenceScores> getParserForType() {
      return PARSER;
    }

    public firmament.CocoInterferenceScores.CoCoInterferenceScores getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_firmament_CoCoInterferenceScores_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_firmament_CoCoInterferenceScores_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036coco_interference_scores.proto\022\tfirmam" +
      "ent\"v\n\026CoCoInterferenceScores\022\025\n\rdevil_p" +
      "enalty\030\001 \001(\r\022\026\n\016rabbit_penalty\030\002 \001(\r\022\025\n\r" +
      "sheep_penalty\030\003 \001(\r\022\026\n\016turtle_penalty\030\004 " +
      "\001(\rb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_firmament_CoCoInterferenceScores_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_firmament_CoCoInterferenceScores_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_firmament_CoCoInterferenceScores_descriptor,
        new java.lang.String[] { "DevilPenalty", "RabbitPenalty", "SheepPenalty", "TurtlePenalty", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
