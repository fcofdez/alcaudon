// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/protobuf/firmament/label_selector.proto

package firmament;

public final class LabelSelectorOuterClass {
  private LabelSelectorOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface LabelSelectorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:firmament.LabelSelector)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .firmament.LabelSelector.SelectorType type = 1;</code>
     */
    int getTypeValue();
    /**
     * <code>optional .firmament.LabelSelector.SelectorType type = 1;</code>
     */
    firmament.LabelSelectorOuterClass.LabelSelector.SelectorType getType();

    /**
     * <code>optional string key = 2;</code>
     */
    java.lang.String getKey();
    /**
     * <code>optional string key = 2;</code>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>repeated string values = 3;</code>
     */
    java.util.List<java.lang.String>
        getValuesList();
    /**
     * <code>repeated string values = 3;</code>
     */
    int getValuesCount();
    /**
     * <code>repeated string values = 3;</code>
     */
    java.lang.String getValues(int index);
    /**
     * <code>repeated string values = 3;</code>
     */
    com.google.protobuf.ByteString
        getValuesBytes(int index);
  }
  /**
   * Protobuf type {@code firmament.LabelSelector}
   */
  public  static final class LabelSelector extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:firmament.LabelSelector)
      LabelSelectorOrBuilder {
    // Use LabelSelector.newBuilder() to construct.
    private LabelSelector(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LabelSelector() {
      type_ = 0;
      key_ = "";
      values_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private LabelSelector(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              key_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                values_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              values_.add(s);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          values_ = values_.getUnmodifiableView();
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return firmament.LabelSelectorOuterClass.internal_static_firmament_LabelSelector_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return firmament.LabelSelectorOuterClass.internal_static_firmament_LabelSelector_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              firmament.LabelSelectorOuterClass.LabelSelector.class, firmament.LabelSelectorOuterClass.LabelSelector.Builder.class);
    }

    /**
     * Protobuf enum {@code firmament.LabelSelector.SelectorType}
     */
    public enum SelectorType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>IN_SET = 0;</code>
       */
      IN_SET(0),
      /**
       * <code>NOT_IN_SET = 1;</code>
       */
      NOT_IN_SET(1),
      /**
       * <code>EXISTS_KEY = 2;</code>
       */
      EXISTS_KEY(2),
      /**
       * <code>NOT_EXISTS_KEY = 3;</code>
       */
      NOT_EXISTS_KEY(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>IN_SET = 0;</code>
       */
      public static final int IN_SET_VALUE = 0;
      /**
       * <code>NOT_IN_SET = 1;</code>
       */
      public static final int NOT_IN_SET_VALUE = 1;
      /**
       * <code>EXISTS_KEY = 2;</code>
       */
      public static final int EXISTS_KEY_VALUE = 2;
      /**
       * <code>NOT_EXISTS_KEY = 3;</code>
       */
      public static final int NOT_EXISTS_KEY_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SelectorType valueOf(int value) {
        return forNumber(value);
      }

      public static SelectorType forNumber(int value) {
        switch (value) {
          case 0: return IN_SET;
          case 1: return NOT_IN_SET;
          case 2: return EXISTS_KEY;
          case 3: return NOT_EXISTS_KEY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SelectorType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SelectorType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SelectorType>() {
              public SelectorType findValueByNumber(int number) {
                return SelectorType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return firmament.LabelSelectorOuterClass.LabelSelector.getDescriptor().getEnumTypes().get(0);
      }

      private static final SelectorType[] VALUES = values();

      public static SelectorType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private SelectorType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:firmament.LabelSelector.SelectorType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional .firmament.LabelSelector.SelectorType type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>optional .firmament.LabelSelector.SelectorType type = 1;</code>
     */
    public firmament.LabelSelectorOuterClass.LabelSelector.SelectorType getType() {
      firmament.LabelSelectorOuterClass.LabelSelector.SelectorType result = firmament.LabelSelectorOuterClass.LabelSelector.SelectorType.valueOf(type_);
      return result == null ? firmament.LabelSelectorOuterClass.LabelSelector.SelectorType.UNRECOGNIZED : result;
    }

    public static final int KEY_FIELD_NUMBER = 2;
    private volatile java.lang.Object key_;
    /**
     * <code>optional string key = 2;</code>
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>optional string key = 2;</code>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUES_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList values_;
    /**
     * <code>repeated string values = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getValuesList() {
      return values_;
    }
    /**
     * <code>repeated string values = 3;</code>
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated string values = 3;</code>
     */
    public java.lang.String getValues(int index) {
      return values_.get(index);
    }
    /**
     * <code>repeated string values = 3;</code>
     */
    public com.google.protobuf.ByteString
        getValuesBytes(int index) {
      return values_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != firmament.LabelSelectorOuterClass.LabelSelector.SelectorType.IN_SET.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (!getKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, key_);
      }
      for (int i = 0; i < values_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, values_.getRaw(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != firmament.LabelSelectorOuterClass.LabelSelector.SelectorType.IN_SET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (!getKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, key_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < values_.size(); i++) {
          dataSize += computeStringSizeNoTag(values_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getValuesList().size();
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof firmament.LabelSelectorOuterClass.LabelSelector)) {
        return super.equals(obj);
      }
      firmament.LabelSelectorOuterClass.LabelSelector other = (firmament.LabelSelectorOuterClass.LabelSelector) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && getKey()
          .equals(other.getKey());
      result = result && getValuesList()
          .equals(other.getValuesList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      if (getValuesCount() > 0) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValuesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static firmament.LabelSelectorOuterClass.LabelSelector parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static firmament.LabelSelectorOuterClass.LabelSelector parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static firmament.LabelSelectorOuterClass.LabelSelector parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static firmament.LabelSelectorOuterClass.LabelSelector parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static firmament.LabelSelectorOuterClass.LabelSelector parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static firmament.LabelSelectorOuterClass.LabelSelector parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static firmament.LabelSelectorOuterClass.LabelSelector parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static firmament.LabelSelectorOuterClass.LabelSelector parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static firmament.LabelSelectorOuterClass.LabelSelector parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static firmament.LabelSelectorOuterClass.LabelSelector parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(firmament.LabelSelectorOuterClass.LabelSelector prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code firmament.LabelSelector}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:firmament.LabelSelector)
        firmament.LabelSelectorOuterClass.LabelSelectorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return firmament.LabelSelectorOuterClass.internal_static_firmament_LabelSelector_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return firmament.LabelSelectorOuterClass.internal_static_firmament_LabelSelector_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                firmament.LabelSelectorOuterClass.LabelSelector.class, firmament.LabelSelectorOuterClass.LabelSelector.Builder.class);
      }

      // Construct using firmament.LabelSelectorOuterClass.LabelSelector.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        key_ = "";

        values_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return firmament.LabelSelectorOuterClass.internal_static_firmament_LabelSelector_descriptor;
      }

      public firmament.LabelSelectorOuterClass.LabelSelector getDefaultInstanceForType() {
        return firmament.LabelSelectorOuterClass.LabelSelector.getDefaultInstance();
      }

      public firmament.LabelSelectorOuterClass.LabelSelector build() {
        firmament.LabelSelectorOuterClass.LabelSelector result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public firmament.LabelSelectorOuterClass.LabelSelector buildPartial() {
        firmament.LabelSelectorOuterClass.LabelSelector result = new firmament.LabelSelectorOuterClass.LabelSelector(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.type_ = type_;
        result.key_ = key_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          values_ = values_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.values_ = values_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof firmament.LabelSelectorOuterClass.LabelSelector) {
          return mergeFrom((firmament.LabelSelectorOuterClass.LabelSelector)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(firmament.LabelSelectorOuterClass.LabelSelector other) {
        if (other == firmament.LabelSelectorOuterClass.LabelSelector.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          onChanged();
        }
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        firmament.LabelSelectorOuterClass.LabelSelector parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (firmament.LabelSelectorOuterClass.LabelSelector) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <code>optional .firmament.LabelSelector.SelectorType type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>optional .firmament.LabelSelector.SelectorType type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .firmament.LabelSelector.SelectorType type = 1;</code>
       */
      public firmament.LabelSelectorOuterClass.LabelSelector.SelectorType getType() {
        firmament.LabelSelectorOuterClass.LabelSelector.SelectorType result = firmament.LabelSelectorOuterClass.LabelSelector.SelectorType.valueOf(type_);
        return result == null ? firmament.LabelSelectorOuterClass.LabelSelector.SelectorType.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .firmament.LabelSelector.SelectorType type = 1;</code>
       */
      public Builder setType(firmament.LabelSelectorOuterClass.LabelSelector.SelectorType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .firmament.LabelSelector.SelectorType type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object key_ = "";
      /**
       * <code>optional string key = 2;</code>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string key = 2;</code>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string key = 2;</code>
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string key = 2;</code>
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>optional string key = 2;</code>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        key_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList values_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          values_ = new com.google.protobuf.LazyStringArrayList(values_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string values = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getValuesList() {
        return values_.getUnmodifiableView();
      }
      /**
       * <code>repeated string values = 3;</code>
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <code>repeated string values = 3;</code>
       */
      public java.lang.String getValues(int index) {
        return values_.get(index);
      }
      /**
       * <code>repeated string values = 3;</code>
       */
      public com.google.protobuf.ByteString
          getValuesBytes(int index) {
        return values_.getByteString(index);
      }
      /**
       * <code>repeated string values = 3;</code>
       */
      public Builder setValues(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValuesIsMutable();
        values_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string values = 3;</code>
       */
      public Builder addValues(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValuesIsMutable();
        values_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string values = 3;</code>
       */
      public Builder addAllValues(
          java.lang.Iterable<java.lang.String> values) {
        ensureValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, values_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string values = 3;</code>
       */
      public Builder clearValues() {
        values_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string values = 3;</code>
       */
      public Builder addValuesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureValuesIsMutable();
        values_.add(value);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:firmament.LabelSelector)
    }

    // @@protoc_insertion_point(class_scope:firmament.LabelSelector)
    private static final firmament.LabelSelectorOuterClass.LabelSelector DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new firmament.LabelSelectorOuterClass.LabelSelector();
    }

    public static firmament.LabelSelectorOuterClass.LabelSelector getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LabelSelector>
        PARSER = new com.google.protobuf.AbstractParser<LabelSelector>() {
      public LabelSelector parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new LabelSelector(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LabelSelector> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LabelSelector> getParserForType() {
      return PARSER;
    }

    public firmament.LabelSelectorOuterClass.LabelSelector getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_firmament_LabelSelector_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_firmament_LabelSelector_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n0src/main/protobuf/firmament/label_sele" +
      "ctor.proto\022\tfirmament\"\261\001\n\rLabelSelector\022" +
      "3\n\004type\030\001 \001(\0162%.firmament.LabelSelector." +
      "SelectorType\022\013\n\003key\030\002 \001(\t\022\016\n\006values\030\003 \003(" +
      "\t\"N\n\014SelectorType\022\n\n\006IN_SET\020\000\022\016\n\nNOT_IN_" +
      "SET\020\001\022\016\n\nEXISTS_KEY\020\002\022\022\n\016NOT_EXISTS_KEY\020" +
      "\003b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_firmament_LabelSelector_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_firmament_LabelSelector_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_firmament_LabelSelector_descriptor,
        new java.lang.String[] { "Type", "Key", "Values", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
