akka {

  loglevel = "INFO"
  stdout-loglevel = "INFO"

  persistence {
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"
  }

  actor {

    serializers {
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }

    serialization-bindings {
      "org.alcaudon.core.StreamRecord" = kryo
      "org.alcaudon.core.AlcaudonStream$Subscribe" = kryo
      "org.alcaudon.core.AlcaudonStream$ACK" = kryo
      "org.alcaudon.core.StreamState" = kryo
      "org.alcaudon.core.State$SetValue" = kryo
      "org.alcaudon.core.State$SetTimer" = kryo
//      "org.alcaudon.core.State$SetProduceRecord" = kryo
    }

    kryo  {
      type = "graph"
      idstrategy = "automatic"
      buffer-size = 4096
      max-buffer-size = -1
      use-manifests = true
      use-unsafe = false
      post-serialization-transformations = "off"
      implicit-registration-logging = true
      kryo-trace = false
      resolve-subclasses = true
    }
  }

  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

}

alcaudon {
  consistency-constraint = "HIGH"
  blob {
    directory = "/tmp/alcaudon"
    download-timeout = 1h
    s3 {
      access-key = "access-key"
      secret-key = "access-secret"
      region = "us-east-1"
    }
  }
}
